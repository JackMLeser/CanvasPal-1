(()=>{"use strict";var e,t={39:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.logger=t.Logger=t.LogLevel=void 0,function(e){e[e.DEBUG=0]="DEBUG",e[e.INFO=1]="INFO",e[e.WARN=2]="WARN",e[e.ERROR=3]="ERROR"}(n=t.LogLevel||(t.LogLevel={}));class s{constructor(e,t=n.INFO){this.context=e,this.currentLevel=t,this.cleanOldLogs()}static getInstance(e,t=n.INFO){const i=`${e}-${t}`;return this.instances.has(i)||this.instances.set(i,new s(e,t)),this.instances.get(i)}setLevel(e){this.currentLevel=e}debug(e,t){this.log(n.DEBUG,e,t)}info(e,t){this.log(n.INFO,e,t)}warn(e,t){this.log(n.WARN,e,t)}error(e,t){this.log(n.ERROR,e,t)}async log(e,t,...s){if(e>=this.currentLevel){const i=(new Date).toISOString(),r=`[${i}] ${this.getLogPrefix(e)} [${this.context}] ${t}`;if(s.length){const e=this.formatLogData(s);console.log(r,e)}else console.log(r);const a={timestamp:i,level:e,message:t,data:s,stack:Error().stack};this.saveLogs(a),e===n.ERROR&&this.notifyError(a)}}getLogPrefix(e){switch(e){case n.DEBUG:return"🔍 DEBUG:";case n.INFO:return"📢 INFO:";case n.WARN:return"⚠️ WARN:";case n.ERROR:return"❌ ERROR:";default:return"📢"}}formatLogData(e){if(e instanceof Element)return{tagName:e.tagName,id:e.id,className:e.className,textContent:e.textContent?.substring(0,100)+"...",html:e.outerHTML?.substring(0,200)+"..."};if(Array.isArray(e))return e.map((e=>this.formatLogData(e)));if(e&&"object"==typeof e){const t={};for(const[n,s]of Object.entries(e))t[n]=this.formatLogData(s);return t}return e}async saveLogs(e){const{logs:t=[]}=await chrome.storage.local.get("logs");t.push(e),t.length>s.MAX_LOGS&&t.splice(0,t.length-s.MAX_LOGS),await chrome.storage.local.set({logs:t})}async cleanOldLogs(){const{logs:e=[]}=await chrome.storage.local.get("logs"),t=new Date;t.setDate(t.getDate()-30);const n=e.filter((e=>new Date(e.timestamp)>t));await chrome.storage.local.set({logs:n})}notifyError(e){chrome.notifications.create({type:"basic",iconUrl:"icons/icon128.png",title:"CanvasPal Error",message:e.message,priority:2})}async getLogs(e){const{logs:t=[]}=await chrome.storage.local.get("logs");return e?t.filter((t=>t.level===e)):t}}t.Logger=s,s.MAX_LOGS=1e3,s.instances=new Map,t.logger=s.getInstance("default")},52:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AssignmentDetector=void 0;const s=n(39),i=n(780),r=n(812),a=n(971);t.AssignmentDetector=class{constructor(){this.logger=new s.Logger("AssignmentDetector"),this.debugPanel=new i.DebugPanel,this.dateDebugger=new r.DateDebugger,this.performanceMonitor=a.PerformanceMonitor.getInstance()}async detectAssignments(){return this.performanceMonitor.monitorAsync("detectAssignments",(async()=>{try{this.debugPanel.logDetectionEvent("Starting assignment detection");const e=await this.performanceMonitor.monitorAsync("dateDetection",(async()=>this.dateDebugger.highlightDates()),{totalElements:document.querySelectorAll('[class*="date"]').length});this.debugPanel.logDetectionEvent("Date detection complete",{totalDates:e.length,dueDates:e.filter((e=>"due"===e.type)).length,performance:this.performanceMonitor.getReport()});const[t,n,s]=await Promise.all([this.performanceMonitor.monitorAsync("fetchPlannerItems",(()=>this.fetchPlannerItems())),this.performanceMonitor.monitorAsync("fetchMissingSubmissions",(()=>this.fetchMissingSubmissions())),this.performanceMonitor.monitorAsync("parseDashboardCards",(()=>this.parseDashboardCards()))]),i=[...t,...n,...s].filter((e=>this.isValidAssignment(e)));await this.performanceMonitor.monitorAsync("validateDates",(async()=>this.validateAssignmentDates(i,e)),{assignmentCount:i.length});const r=this.performanceMonitor.getReport();return this.debugPanel.logDetectionEvent("Assignment detection complete",{totalAssignments:i.length,performance:r}),i}catch(e){return this.logger.error("Error detecting assignments:",e),[]}}))}async validateAssignmentDates(e,t){return this.performanceMonitor.monitorAsync("validateAssignmentDates",(async()=>{e.forEach((e=>{const n=t.filter((t=>{const n=t.date.getTime(),s=e.dueDate.getTime();return Math.abs(n-s)<864e5}));n.length>0&&this.debugPanel.logDetectionEvent("Date validation:",{assignment:e.title,dueDate:e.dueDate,matchingElements:n.length})}))}),{assignmentCount:e.length,dateMatchCount:t.length})}async fetchPlannerItems(){try{const e=await fetch("/api/v1/planner/items?per_page=50",{headers:{Accept:"application/json+canvas-string-ids, application/json","X-Requested-With":"XMLHttpRequest"},credentials:"same-origin"});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const t=await e.json();return this.debugPanel.logDetectionEvent("Planner items retrieved:",t),t.map((e=>{const t=this.convertPlannerItem(e);return t&&this.debugPanel.logDetectionEvent("Processed planner item:",{title:t.title,type:t.type,dueDate:t.dueDate}),t})).filter((e=>null!==e))}catch(e){return this.logger.error("Error fetching planner items:",e),[]}}async fetchMissingSubmissions(){try{const e=await fetch("/api/v1/users/self/missing_submissions?include[]=planner_overrides",{headers:{Accept:"application/json","X-Requested-With":"XMLHttpRequest"},credentials:"same-origin"});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return(await e.json()).map((e=>this.convertMissingSubmission(e))).filter((e=>null!==e))}catch(e){return this.logger.error("Error fetching missing submissions:",e),[]}}async parseDashboardCards(){try{const e=await fetch("/api/v1/dashboard/dashboard_cards",{headers:{Accept:"application/json+canvas-string-ids, application/json","X-Requested-With":"XMLHttpRequest"},credentials:"same-origin"});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const t=await e.json();this.debugPanel.logDetectionEvent("Dashboard cards retrieved:",t);const n=[];for(const e of t)if(e.assignments){const t=e.assignments.map((t=>{const n=this.convertDashboardAssignment(t,e);return n&&this.debugPanel.logDetectionEvent("Processed dashboard assignment:",{title:n.title,type:n.type,course:n.course}),n})).filter((e=>null!==e));n.push(...t)}return n}catch(e){return this.logger.error("Error parsing dashboard cards:",e),[]}}convertPlannerItem(e){if(!e.plannable||!e.plannable_type)return null;const t=this.determineAssignmentType(e.plannable_type),n=e.plannable_date?new Date(e.plannable_date):null;return t&&n?{id:e.plannable_id.toString(),title:e.plannable?.title||e.plannable?.name||"",dueDate:n,course:e.context_name||"",courseId:e.course_id?.toString(),type:t,points:e.plannable?.points_possible,maxPoints:e.plannable?.points_possible,completed:!!e.planner_override?.marked_complete,priorityScore:0,url:e.html_url,details:{submissionType:e.plannable?.submission_types,isCompleted:!!e.planner_override?.marked_complete,isLocked:!!e.plannable?.locked_for_user,description:e.plannable?.description}}:null}convertMissingSubmission(e){return e.due_at?{id:e.id.toString(),title:e.name||e.assignment?.name||"",dueDate:new Date(e.due_at),course:e.course?.name||"",courseId:e.course_id?.toString(),type:"assignment",points:e.points_possible,maxPoints:e.points_possible,completed:!1,priorityScore:0,url:e.html_url,details:{isCompleted:!1,isLocked:!1}}:null}convertDashboardAssignment(e,t){if(!e.due_at)return null;const n=this.determineAssignmentType(e.type);return{id:e.id.toString(),title:e.name||"",dueDate:new Date(e.due_at),course:t.shortName||"",courseId:t.id?.toString(),type:n,points:e.points_possible,maxPoints:e.points_possible,completed:!!e.has_submitted_submissions,priorityScore:0,url:e.html_url,details:{submissionType:e.submission_types,isCompleted:!!e.has_submitted_submissions,isLocked:!!e.locked_for_user,description:e.description}}}determineAssignmentType(e){switch(e.toLowerCase()){case"quiz":case"quizzes/quiz":return"quiz";case"discussion_topic":return"discussion";case"announcement":return"announcement";default:return"assignment"}}isValidAssignment(e){return null!==e&&!!e.title&&!!e.dueDate&&!!e.course}}},736:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DateDebugPanel=void 0;const s=n(39);t.DateDebugPanel=class{constructor(){this.panel=null,this.logger=new s.Logger("DateDebugPanel"),this.createPanel()}createPanel(){this.panel=document.createElement("div"),this.panel.id="date-debug-panel",this.panel.style.cssText="\n            position: fixed;\n            bottom: 20px;\n            left: 20px;\n            width: 300px;\n            max-height: 400px;\n            background: rgba(0, 0, 0, 0.9);\n            color: white;\n            padding: 15px;\n            border-radius: 8px;\n            font-family: monospace;\n            font-size: 12px;\n            z-index: 9999;\n            overflow-y: auto;\n            box-shadow: 0 0 10px rgba(0,0,0,0.5);\n            display: none;\n        ";const e=document.createElement("div");e.innerHTML='\n            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">\n                <span style="color: #ffd700; font-weight: bold;">📅 Date Detection Debug</span>\n                <button id="date-debug-close" style="background: none; border: none; color: white; cursor: pointer;">✕</button>\n            </div>\n        ',this.panel.appendChild(e);const t=document.createElement("div");t.id="date-debug-content",this.panel.appendChild(t),document.body.appendChild(this.panel),document.getElementById("date-debug-close")?.addEventListener("click",(()=>{this.toggleVisibility()})),document.addEventListener("keydown",(e=>{(e.ctrlKey||e.metaKey)&&e.shiftKey&&"T"===e.key&&(e.preventDefault(),this.toggleVisibility())}))}toggleVisibility(){if(this.panel){const e="block"===this.panel.style.display;this.panel.style.display=e?"none":"block"}}updateDebugInfo(e){const t=document.getElementById("date-debug-content");t&&(t.innerHTML=`\n            <div class="date-stats" style="margin-bottom: 15px;">\n                <div style="color: #0066cc; margin-bottom: 8px;">\n                    Found ${e.totalDates} date${1!==e.totalDates?"s":""}\n                </div>\n                ${this.renderTypeDistribution(e.types)}\n            </div>\n            <div class="date-detections">\n                <div style="color: #ffd700; margin-bottom: 8px;">Detected Dates:</div>\n                ${this.renderDetections(e.detections)}\n            </div>\n        `)}renderTypeDistribution(e){const t={due:"#ff6b6b",availability:"#4CAF50",unlock:"#2196F3",unknown:"#9e9e9e"};return Object.entries(e).map((([e,n])=>`\n                <div style="margin-left: 10px; color: ${t[e]};">\n                    ${e.charAt(0).toUpperCase()+e.slice(1)}: ${n}\n                </div>\n            `)).join("")}renderDetections(e){return e.map((e=>`\n                <div style="margin: 8px 0; padding: 8px; background: rgba(255,255,255,0.1); border-radius: 4px;">\n                    <div style="margin-bottom: 4px; color: #90EE90;">\n                        ${e.text}\n                    </div>\n                    <div style="font-size: 11px; color: #ADD8E6;">\n                        Type: ${e.type}\n                    </div>\n                    <div style="font-size: 11px; color: #DDA0DD;">\n                        Parsed: ${e.date}\n                    </div>\n                    <div style="font-size: 11px; color: #FFB6C1;">\n                        Element: ${e.element}\n                    </div>\n                </div>\n            `)).join("")}logDateDetection(e,t){this.logger.debug(e,t)}}},780:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DebugPanel=void 0;const s=n(39),i=n(971);t.DebugPanel=class{constructor(){this.panel=null,this.isVisible=!1,this.logger=new s.Logger("DebugPanel"),this.performanceMonitor=i.PerformanceMonitor.getInstance(),this.createPanel(),this.initializeKeyboardShortcut()}createPanel(){this.panel=document.createElement("div"),this.panel.id="canvaspal-debug-panel",this.panel.innerHTML='\n            <div class="debug-panel-header">\n                <span>🔍 CanvasPal Debug</span>\n                <div class="debug-panel-controls">\n                    <button id="clear-metrics" title="Clear Performance Metrics">🗑️</button>\n                    <button id="canvaspal-debug-close">✕</button>\n                </div>\n            </div>\n            <div class="debug-panel-content">\n                <div id="performance-metrics"></div>\n                <div id="assignment-info"></div>\n            </div>\n        ',this.panel.style.cssText="\n            position: fixed;\n            bottom: 20px;\n            right: 20px;\n            width: 350px;\n            max-height: 500px;\n            background: rgba(0, 0, 0, 0.9);\n            color: white;\n            padding: 15px;\n            border-radius: 8px;\n            font-family: monospace;\n            font-size: 12px;\n            z-index: 9999;\n            overflow-y: auto;\n            box-shadow: 0 0 10px rgba(0,0,0,0.5);\n            display: none;\n        ";const e=document.createElement("style");e.textContent="\n            .debug-panel-header {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                margin-bottom: 10px;\n                padding-bottom: 10px;\n                border-bottom: 1px solid rgba(255,255,255,0.1);\n            }\n\n            .debug-panel-controls {\n                display: flex;\n                gap: 8px;\n            }\n\n            .debug-panel-controls button {\n                background: none;\n                border: none;\n                color: white;\n                cursor: pointer;\n                padding: 4px;\n                border-radius: 4px;\n                transition: background 0.2s;\n            }\n\n            .debug-panel-controls button:hover {\n                background: rgba(255,255,255,0.1);\n            }\n\n            .performance-section {\n                margin: 10px 0;\n                padding: 8px;\n                background: rgba(255,255,255,0.05);\n                border-radius: 4px;\n            }\n\n            .metric-item {\n                margin: 4px 0;\n                display: flex;\n                justify-content: space-between;\n            }\n\n            .metric-value {\n                color: #90EE90;\n            }\n\n            .slow-metric {\n                color: #ff6b6b;\n            }\n\n            .normal-metric {\n                color: #ffd700;\n            }\n\n            .fast-metric {\n                color: #90EE90;\n            }\n        ",document.head.appendChild(e),document.body.appendChild(this.panel),document.getElementById("canvaspal-debug-close")?.addEventListener("click",(()=>{this.toggleVisibility()})),document.getElementById("clear-metrics")?.addEventListener("click",(()=>{this.performanceMonitor.clear(),this.updatePerformanceMetrics()}))}initializeKeyboardShortcut(){document.addEventListener("keydown",(e=>{(e.ctrlKey||e.metaKey)&&e.shiftKey&&"D"===e.key&&(e.preventDefault(),this.toggleVisibility())}))}toggleVisibility(){this.panel&&(this.isVisible=!this.isVisible,this.panel.style.display=this.isVisible?"block":"none",this.logger.debug("Debug panel "+(this.isVisible?"shown":"hidden")))}updatePerformanceMetrics(){const e=document.getElementById("performance-metrics");if(!e)return;const t=this.performanceMonitor.getReport();e.innerHTML=`\n            <div class="performance-section">\n                <h3>Performance Summary</h3>\n                <div class="metric-item">\n                    <span>Total Duration:</span>\n                    <span class="metric-value">${t.summary.totalDuration.toFixed(2)}ms</span>\n                </div>\n                <div class="metric-item">\n                    <span>Average Duration:</span>\n                    <span class="metric-value">${t.summary.averageDuration.toFixed(2)}ms</span>\n                </div>\n                <div class="metric-item">\n                    <span>Slowest Operation:</span>\n                    <span class="slow-metric">${t.summary.slowestOperation.name} (${t.summary.slowestOperation.duration.toFixed(2)}ms)</span>\n                </div>\n                <div class="metric-item">\n                    <span>Fastest Operation:</span>\n                    <span class="fast-metric">${t.summary.fastestOperation.name} (${t.summary.fastestOperation.duration.toFixed(2)}ms)</span>\n                </div>\n            </div>\n            <div class="performance-section">\n                <h3>Recent Operations</h3>\n                ${t.metrics.slice(-5).map((e=>`\n                    <div class="metric-item">\n                        <span>${e.name}</span>\n                        <span class="${this.getMetricSpeedClass(e.duration||0)}">${e.duration?.toFixed(2)}ms</span>\n                    </div>\n                `)).join("")}\n            </div>\n        `}getMetricSpeedClass(e){return e>100?"slow-metric":e>50?"normal-metric":"fast-metric"}updateAssignmentInfo(e){const t=document.getElementById("assignment-info");if(!t)return;const n=this.getAssignmentTypeCounts(e),s=this.getPriorityRanges(e);t.innerHTML=`\n            <div style="margin-bottom: 15px;">\n                <div style="color: #0066cc; margin-bottom: 8px;">\n                    Found ${e.length} assignments\n                </div>\n                ${this.renderTypeCounts(n)}\n                ${this.renderPriorityDistribution(s)}\n            </div>\n            ${this.renderAssignmentList(e)}\n        `,this.updatePerformanceMetrics()}getAssignmentTypeCounts(e){return e.reduce(((e,t)=>(e[t.type]=(e[t.type]||0)+1,e)),{})}getPriorityRanges(e){return e.reduce(((e,t)=>(t.priorityScore>=.7?e.high=(e.high||0)+1:t.priorityScore>=.4?e.medium=(e.medium||0)+1:e.low=(e.low||0)+1,e)),{})}renderTypeCounts(e){return`\n            <div style="margin-bottom: 10px;">\n                <div style="color: #ffd700; margin-bottom: 5px;">Assignment Types:</div>\n                ${Object.entries(e).map((([e,t])=>`\n                    <div style="margin-left: 10px; color: #90EE90;">\n                        ${e}: ${t}\n                    </div>\n                `)).join("")}\n            </div>\n        `}renderPriorityDistribution(e){const t={high:"#ff6b6b",medium:"#ffd700",low:"#90EE90"};return`\n            <div style="margin-bottom: 10px;">\n                <div style="color: #ffd700; margin-bottom: 5px;">Priority Distribution:</div>\n                ${Object.entries(e).map((([e,n])=>`\n                    <div style="margin-left: 10px; color: ${t[e]};">\n                        ${e}: ${n}\n                    </div>\n                `)).join("")}\n            </div>\n        `}renderAssignmentList(e){return`\n            <div style="margin-top: 15px;">\n                <div style="color: #ffd700; margin-bottom: 5px;">Detailed Assignments:</div>\n                ${e.map((e=>this.renderAssignmentDetail(e))).join("")}\n            </div>\n        `}renderAssignmentDetail(e){const t=e.priorityScore>=.7?"#ff6b6b":e.priorityScore>=.4?"#ffd700":"#90EE90";return`\n            <div style="margin: 8px 0; padding: 8px; border-left: 2px solid ${t}; background: rgba(255,255,255,0.1);">\n                <div style="margin-bottom: 4px;">📚 ${e.title}</div>\n                <div style="color: #90EE90; margin-bottom: 4px;">\n                    ${e.points?`📝 ${e.points}/${e.maxPoints} points`:"No points data"}\n                </div>\n                <div style="color: #ADD8E6; font-size: 11px;">\n                    ⏰ Due: ${e.dueDate.toLocaleDateString()}\n                </div>\n                <div style="color: #DDA0DD; font-size: 11px;">\n                    📚 Course: ${e.course}\n                </div>\n                <div style="color: ${t}; font-size: 11px; margin-top: 4px;">\n                    ⚡ Priority: ${Math.round(100*e.priorityScore)}%\n                </div>\n            </div>\n        `}logDetectionEvent(e,t){this.logger.debug(e,t)}updatePerformanceAnalysis(e){}}},812:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DateDebugger=void 0;const s=n(39),i=n(736);class r{constructor(){this.logger=new s.Logger("DateDebugger"),this.debugPanel=new i.DateDebugPanel,this.injectDebugStyles()}injectDebugStyles(){const e=document.createElement("style");e.textContent=r.DATE_DEBUG_STYLES,document.head.appendChild(e)}highlightDates(){const e=[];document.querySelectorAll('[class*="date"], [class*="due"], [class*="deadline"], [aria-label*="due"], [title*="due"], [data-date], [datetime]').forEach((t=>{const n=this.processDateElement(t);n&&(e.push(n),this.applyDebugHighlight(n))}));const t=this.findDatesInTextNodes();return e.push(...t),this.updateDebugPanel(e),this.logger.debug("Found dates:",e),e}findDatesInTextNodes(){const e=[],t=document.createTreeWalker(document.body,NodeFilter.SHOW_TEXT,{acceptNode:e=>e.parentElement?.closest(".debug-date")?NodeFilter.FILTER_REJECT:this.containsDatePattern(e.textContent||"")?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_REJECT});let n;for(;n=t.nextNode();)this.findDatesInText(n).forEach((t=>{e.push(t),this.applyDebugHighlight(t)}));return e}updateDebugPanel(e){const t={due:0,availability:0,unlock:0,unknown:0};e.forEach((e=>{t[e.type]++}));const n={totalDates:e.length,types:t,detections:e.map((e=>({element:this.getElementDescription(e.element),text:e.text,type:this.getDebugLabel(e.type),date:e.date.toLocaleString()})))};this.debugPanel.updateDebugInfo(n)}getElementDescription(e){return`${e.tagName.toLowerCase()}${e.id?`#${e.id}`:""}${Array.from(e.classList).filter((e=>!e.includes("debug-date"))).map((e=>`.${e}`)).join("")}`}processDateElement(e){const t=e.getAttribute("data-date")||e.getAttribute("datetime")||e.getAttribute("title")||e.getAttribute("aria-label")||e.textContent;if(!t)return null;const n=this.parseDate(t);return n?{element:e,date:n,type:this.determineDateType(e,t),text:t}:null}findDatesInText(e){const t=[],n=e.textContent||"";return[/\d{4}-\d{2}-\d{2}/g,/\d{1,2}\/\d{1,2}\/\d{4}/g,/(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]* \d{1,2},? \d{4}/gi,/\b(?:today|tomorrow|yesterday)\b/gi,/(?:next|last) (?:monday|tuesday|wednesday|thursday|friday|saturday|sunday)\b/gi].forEach((s=>{const i=new RegExp(s);let r;for(;null!==(r=i.exec(n));){const n=this.parseDate(r[0]);if(n){const s=document.createElement("span");e.splitText(r.index),e.splitText(r[0].length),s.textContent=r[0],e.parentNode?.replaceChild(s,e),t.push({element:s,date:n,type:this.determineDateType(s,r[0]),text:r[0]})}}})),t}parseDate(e){try{const t=e.toLowerCase();if(t.includes("today"))return new Date;if(t.includes("tomorrow")){const e=new Date;return e.setDate(e.getDate()+1),e}if(t.includes("yesterday")){const e=new Date;return e.setDate(e.getDate()-1),e}const n=new Date(e);if(!isNaN(n.getTime()))return n;const s=[/(\d{1,2})\/(\d{1,2})\/(\d{4})/,/(\w+) (\d{1,2}),? (\d{4})/];for(const t of s)if(e.match(t)){const t=new Date(e);if(!isNaN(t.getTime()))return t}}catch(t){this.logger.debug("Date parsing failed:",{dateStr:e,error:t})}return null}determineDateType(e,t){const n=(e.textContent+" "+(e.getAttribute("aria-label")||"")+" "+(e.getAttribute("title")||"")).toLowerCase();return n.includes("due")||n.includes("deadline")?"due":n.includes("available")||n.includes("opens")?"availability":n.includes("unlock")||n.includes("start")?"unlock":"unknown"}applyDebugHighlight(e){const t=e.element;t.classList.add("debug-date"),t.setAttribute("data-debug-type",this.getDebugLabel(e.type)),t.setAttribute("title",`Detected ${e.type} date: ${e.date.toLocaleDateString()}`)}getDebugLabel(e){switch(e){case"due":return"DUE DATE";case"availability":return"AVAILABILITY";case"unlock":return"UNLOCK";default:return"DATE"}}containsDatePattern(e){return!!e&&/\d{4}-\d{2}-\d{2}|\d{1,2}\/\d{1,2}\/\d{4}|(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]* \d{1,2},? \d{4}|\b(?:today|tomorrow|yesterday)\b|(?:next|last) (?:monday|tuesday|wednesday|thursday|friday|saturday|sunday)\b/i.test(e)}}t.DateDebugger=r,r.DATE_DEBUG_STYLES='\n        .debug-date {\n            background-color: rgba(255, 255, 0, 0.3) !important;\n            border: 2px solid #ffd700 !important;\n            position: relative !important;\n            z-index: 1000;\n            padding: 2px !important;\n            margin: 2px !important;\n            border-radius: 3px !important;\n            display: inline-block !important;\n        }\n\n        .debug-date::after {\n            content: attr(data-debug-type);\n            position: absolute;\n            top: -20px;\n            left: 0;\n            background: #ffd700;\n            color: black;\n            font-size: 10px;\n            padding: 2px 4px;\n            border-radius: 2px;\n            z-index: 1001;\n            pointer-events: none;\n            white-space: nowrap;\n        }\n\n        .debug-date[data-debug-type="DUE DATE"] {\n            border-color: #ff6b6b !important;\n        }\n\n        .debug-date[data-debug-type="DUE DATE"]::after {\n            background: #ff6b6b;\n            color: white;\n        }\n\n        .debug-date[data-debug-type="AVAILABILITY"] {\n            border-color: #4CAF50 !important;\n        }\n\n        .debug-date[data-debug-type="AVAILABILITY"]::after {\n            background: #4CAF50;\n            color: white;\n        }\n\n        .debug-date[data-debug-type="UNLOCK"] {\n            border-color: #2196F3 !important;\n        }\n\n        .debug-date[data-debug-type="UNLOCK"]::after {\n            background: #2196F3;\n            color: white;\n        }\n    '},837:function(e,t,n){var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,i)}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.parseICalFeed=void 0;const a=r(n(225));t.parseICalFeed=e=>{const t=a.parse(e);return new a.Component(t).getAllSubcomponents("vevent").map((e=>{const t=new a.Event(e);return{title:t.summary,dueDate:t.startDate.toJSDate(),courseId:t.uid.split("_")[0],assignmentId:t.uid.split("_")[1]}}))}},887:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PriorityCalculator=void 0;const s=n(39),i=n(780),r=n(971);t.PriorityCalculator=class{constructor(){this.PRIORITY_WEIGHTS={GRADE_IMPACT:.4,COURSE_GRADE:.3,DUE_DATE:.3},this.logger=new s.Logger("PriorityCalculator"),this.debugPanel=new i.DebugPanel,this.performanceMonitor=r.PerformanceMonitor.getInstance()}calculatePriority(e){return this.performanceMonitor.monitor("calculatePriority",(()=>{try{const t={daysUntilDue:this.performanceMonitor.monitor("calculateDaysUntilDue",(()=>this.calculateDaysUntilDue(e.dueDate))),gradeImpact:this.performanceMonitor.monitor("calculateGradeImpact",(()=>this.calculateGradeImpact(e))),courseGradeImpact:this.performanceMonitor.monitor("calculateCourseGradeImpact",(()=>this.calculateCourseGradeImpact(e))),typeWeight:this.performanceMonitor.monitor("getTypeWeight",(()=>this.getTypeWeight(e.type)))},n=this.performanceMonitor.monitor("calculateComponents",(()=>({gradeComponent:t.gradeImpact*this.PRIORITY_WEIGHTS.GRADE_IMPACT,courseComponent:t.courseGradeImpact*this.PRIORITY_WEIGHTS.COURSE_GRADE,dateComponent:this.calculateDueDatePriority(t.daysUntilDue)*this.PRIORITY_WEIGHTS.DUE_DATE}))),s=this.performanceMonitor.monitor("calculateFinalPriority",(()=>{const e=n.gradeComponent+n.courseComponent+n.dateComponent;return Math.min(Math.max(e*t.typeWeight,0),1)}));return this.debugPanel.logDetectionEvent("Priority calculation:",{assignment:e.title,components:n,metrics:t,finalPriority:s,performance:this.performanceMonitor.getReport()}),s}catch(e){return this.logger.error("Error calculating priority:",e),0}}),{assignmentTitle:e.title})}calculateDaysUntilDue(e){const t=new Date,n=e.getTime()-t.getTime();return Math.ceil(n/864e5)}calculateDueDatePriority(e){return e<=0?1:e>=14?.2:1-e/14}calculateGradeImpact(e){return e.points&&e.maxPoints?Math.min(e.points/100,1):.5}calculateCourseGradeImpact(e){return e.courseGrade?1-e.courseGrade:.85}getTypeWeight(e){switch(e){case"quiz":return 1.2;case"assignment":default:return 1;case"discussion":return.8;case"announcement":return.5}}setPriorityWeights(e){const t=(e.GRADE_IMPACT||this.PRIORITY_WEIGHTS.GRADE_IMPACT)+(e.COURSE_GRADE||this.PRIORITY_WEIGHTS.COURSE_GRADE)+(e.DUE_DATE||this.PRIORITY_WEIGHTS.DUE_DATE);Math.abs(t-1)>.001?this.logger.warn("Priority weights do not sum to 1. Using default weights."):(Object.assign(this.PRIORITY_WEIGHTS,e),this.logger.info("Priority weights updated:",this.PRIORITY_WEIGHTS),this.debugPanel.logDetectionEvent("Priority weights updated:",this.PRIORITY_WEIGHTS))}}},922:(e,t,n)=>{t.i=void 0;const s=n(837),i=n(39),r=n(52),a=n(887);class o{constructor(){this.gradeData={},this.lastSyncTime=0,this.assignments=[],this.settings={icalUrl:"",refreshInterval:30,priorities:{dueDate:.4,gradeWeight:.3,gradeImpact:.3}},this.detector=new r.AssignmentDetector,this.priorityCalculator=new a.PriorityCalculator,this.logger=new i.Logger("BackgroundService"),this.initialize(),this.initializeMessageHandlers(),this.setupAutoRefresh()}async initialize(){const{settings:e}=await chrome.storage.sync.get("settings");e?this.settings=e:await chrome.storage.sync.set({settings:this.settings}),chrome.runtime.onMessage.addListener(((e,t,n)=>{switch(e.type){case"SETTINGS_UPDATED":this.settings=e.settings,this.performSync();break;case"GET_ASSIGNMENTS":return this.fetchAndProcessAssignments().then(n).catch((e=>n({error:e.message}))),!0}})),this.startPeriodicSync()}initializeMessageHandlers(){chrome.runtime.onMessage.addListener(((e,t,n)=>"GRADE_DATA"===e.type?(this.handleGradeData(e.data),n({success:!0}),!0):(this.handleMessage(e,t,n),!0)))}async handleMessage(e,t,n){try{switch(e.type){case"GET_ASSIGNMENTS":n({assignments:await this.getAssignments()});break;case"UPDATE_ASSIGNMENT_COMPLETION":await this.updateAssignmentCompletion(e.assignmentId,e.completed),n({success:!0});break;case"REFRESH_ASSIGNMENTS":await this.refreshAssignments(),n({success:!0});break;default:this.logger.warn("Unknown message type:",e),n({error:"Unknown message type"})}}catch(e){this.logger.error("Error handling message:",e),n({error:"Internal error"})}}async getAssignments(){return 0===this.assignments.length&&await this.refreshAssignments(),this.assignments}async refreshAssignments(){try{const e=await this.detector.detectAssignments();e.forEach((e=>{e.priorityScore=this.priorityCalculator.calculatePriority(e)})),e.sort(((e,t)=>t.priorityScore-e.priorityScore)),this.assignments=e,this.notifyPopups(),this.logger.info("Assignments refreshed:",{count:e.length,types:this.getAssignmentTypeCounts(e)})}catch(e){throw this.logger.error("Error refreshing assignments:",e),e}}async updateAssignmentCompletion(e,t){const n=this.assignments.find((t=>t.id===e));n&&(n.completed=t,await this.saveAssignments(),this.notifyPopups())}async saveAssignments(){try{await chrome.storage.local.set({assignments:this.assignments,lastUpdated:(new Date).toISOString()})}catch(e){throw this.logger.error("Error saving assignments:",e),e}}notifyPopups(){chrome.runtime.sendMessage({type:"ASSIGNMENTS_UPDATED",assignments:this.assignments}).catch((e=>{this.logger.debug("No popups to notify:",e)}))}setupAutoRefresh(){chrome.alarms.create("refreshAssignments",{periodInMinutes:30}),chrome.alarms.onAlarm.addListener((async e=>{"refreshAssignments"===e.name&&await this.refreshAssignments()}))}getAssignmentTypeCounts(e){return e.reduce(((e,t)=>(e[t.type]=(e[t.type]||0)+1,e)),{})}async fetchCalendarData(e){const t=await fetch(e),n=await t.text();return(0,s.parseICalFeed)(n)}handleGradeData(e){try{this.logger.info("Received grade data:",e),this.gradeData[e.courseName]=e,chrome.storage.local.set({[`grades_${e.courseName}`]:e,lastUpdated:(new Date).toISOString()})}catch(e){this.logger.error("Error handling grade data:",e)}}startPeriodicSync(){this.syncIntervalId&&(window.clearInterval(this.syncIntervalId),this.syncIntervalId=void 0),this.retryTimeoutId&&(window.clearTimeout(this.retryTimeoutId),this.retryTimeoutId=void 0),this.performSync();const e=window.setInterval((()=>{this.performSync()}),o.SYNC_INTERVAL);this.syncIntervalId=e}async performSync(){try{const e=Date.now();if(e-this.lastSyncTime<6e4)return;await this.fetchAndProcessAssignments(),this.lastSyncTime=e,await this.logger.info("Sync completed successfully"),chrome.runtime.sendMessage({type:"syncComplete",timestamp:e})}catch(e){await this.logger.error("Sync failed",e),console.error("Sync failed:",e);const t=window.setTimeout((()=>{this.performSync()}),o.RETRY_INTERVAL);this.retryTimeoutId=t,chrome.runtime.sendMessage({type:"syncError",error:e instanceof Error?e.message:"Unknown error"})}}async fetchAndProcessAssignments(){if(!this.settings.icalUrl)throw new Error("iCalendar URL not set");try{const e=await fetch(this.settings.icalUrl);if(!e.ok)throw new Error(`Failed to fetch iCal feed: ${e.statusText}`);const t=await e.text(),n=this.parseICalData(t);return this.enrichAssignmentsWithGrades(n)}catch(e){throw console.error("Failed to fetch or parse iCal data:",e),new Error("Failed to fetch assignments")}}enrichAssignmentsWithGrades(e){return e.map((e=>({...e,...this.findGradeInfo(e)})))}findGradeInfo(e){const t=this.gradeData[e.courseId];if(!t)return{};const n=t.assignments.find((t=>t.name.toLowerCase()===e.title.toLowerCase()));return n?{gradeWeight:n.weight,pointsPossible:n.pointsPossible,currentScore:n.points}:{}}parseICalData(e){return(0,s.parseICalFeed)(e).map((e=>({...e,courseId:this.extractCourseId(e.courseId)})))}extractCourseId(e){const t=e.match(/Course: (.*?)(?:\n|$)/);return t?t[1]:"Unknown Course"}}o.SYNC_INTERVAL=18e5,o.RETRY_INTERVAL=3e5,t.i=new o,t.i.initialize().then((()=>{chrome.alarms.create("sync",{periodInMinutes:30}),chrome.alarms.onAlarm.addListener((e=>{"sync"===e.name&&t.i.performSync()})),chrome.commands.onCommand.addListener((e=>{"refresh-assignments"===e&&t.i.performSync()}))}))},971:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PerformanceMonitor=void 0;const s=n(39);class i{constructor(){this.metrics=[],this.logger=new s.Logger("PerformanceMonitor")}static getInstance(){return i.instance||(i.instance=new i),i.instance}startMetric(e,t){const n=`${e}_${Date.now()}`;return this.metrics.push({name:e,startTime:performance.now(),metadata:t}),n}endMetric(e){const t=this.metrics.find((t=>t.name===e&&!t.endTime));t&&(t.endTime=performance.now(),t.duration=t.endTime-t.startTime,this.logger.debug(`Performance metric - ${e}:`,{duration:`${t.duration.toFixed(2)}ms`,metadata:t.metadata}))}getReport(){const e=this.metrics.filter((e=>void 0!==e.duration));if(0===e.length)return{metrics:[],summary:{totalDuration:0,averageDuration:0,slowestOperation:{name:"none",duration:0},fastestOperation:{name:"none",duration:0}}};const t=e.reduce(((e,t)=>e+(t.duration||0)),0),n=t/e.length,s=[...e].sort(((e,t)=>(t.duration||0)-(e.duration||0)));return{metrics:e,summary:{totalDuration:t,averageDuration:n,slowestOperation:{name:s[0].name,duration:s[0].duration||0},fastestOperation:{name:s[s.length-1].name,duration:s[s.length-1].duration||0}}}}clear(){this.metrics=[]}monitorAsync(e,t,n){return this.startMetric(e,n),t().finally((()=>this.endMetric(e)))}monitor(e,t,n){this.startMetric(e,n);const s=t();return this.endMetric(e),s}}t.PerformanceMonitor=i}},n={};function s(e){var i=n[e];if(void 0!==i)return i.exports;var r=n[e]={exports:{}};return t[e].call(r.exports,r,r.exports,s),r.exports}s.m=t,e=[],s.O=(t,n,i,r)=>{if(!n){var a=1/0;for(d=0;d<e.length;d++){for(var[n,i,r]=e[d],o=!0,c=0;c<n.length;c++)(!1&r||a>=r)&&Object.keys(s.O).every((e=>s.O[e](n[c])))?n.splice(c--,1):(o=!1,r<a&&(a=r));if(o){e.splice(d--,1);var l=i();void 0!==l&&(t=l)}}return t}r=r||0;for(var d=e.length;d>0&&e[d-1][2]>r;d--)e[d]=e[d-1];e[d]=[n,i,r]},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={286:0};s.O.j=t=>0===e[t];var t=(t,n)=>{var i,r,[a,o,c]=n,l=0;if(a.some((t=>0!==e[t]))){for(i in o)s.o(o,i)&&(s.m[i]=o[i]);if(c)var d=c(s)}for(t&&t(n);l<a.length;l++)r=a[l],s.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return s.O(d)},n=self.webpackChunkcanvaspal=self.webpackChunkcanvaspal||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var i=s.O(void 0,[281],(()=>s(922)));i=s.O(i)})();
//# sourceMappingURL=index.js.map