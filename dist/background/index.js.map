{"version":3,"file":"background/index.js","mappings":"mBAAAA,QAAQC,IAAI,4BAWZ,IAAIC,EAA4B,GAGhCC,OAAOC,QAAQC,UAAUC,aAAY,CAACC,EAASC,EAAQC,KAGnD,OAFAT,QAAQC,IAAI,+BAAgCM,GAEpCA,EAAQG,MACZ,IAAK,kBAEDD,EAAa,CAAEP,gBACf,MAEJ,IAAK,qBAEDA,EAAcK,EAAQI,KAEtBR,OAAOS,KAAKC,MAAM,CAAC,GAAID,IACnBA,EAAKE,SAAQC,IACLA,EAAIC,IACJb,OAAOS,KAAKK,YAAYF,EAAIC,GAAI,CAC5BN,KAAM,qBACNC,KAAMT,IACPgB,OAAMC,IACLnB,QAAQC,IAAI,gCAAiCkB,EAAM,G,GAG7D,IAEN,MAEJ,IAAK,oBACDjB,EAAc,GACdO,EAAa,CAAEW,SAAS,IAKhC,OAAO,CAAI,IAIfjB,OAAOC,QAAQiB,YAAYf,aAAY,KACnCN,QAAQC,IAAI,+BAEZE,OAAOmB,QAAQC,MAAMC,IAAI,CACrBC,SAAU,CACNC,eAAgB,CACZC,mBAAmB,KAG7B,IAINxB,OAAOyB,OAAOC,OAAO,qBAAsB,CACvCC,gBAAiB,IAGrB3B,OAAOyB,OAAOG,QAAQzB,aAAa0B,IACZ,uBAAfA,EAAMC,MAEN9B,OAAOS,KAAKC,MAAM,CAAC,GAAID,IACnBA,EAAKE,SAAQC,IACLA,EAAIC,IACJb,OAAOS,KAAKK,YAAYF,EAAIC,GAAI,CAC5BN,KAAM,wBACPQ,OAAMC,IACLnB,QAAQC,IAAI,wCAAyCkB,EAAM,G,GAGrE,G","sources":["webpack://canvaspal/./src/background/index.ts"],"sourcesContent":["console.log('Background script loaded');\n\ninterface Assignment {\n    title: string;\n    dueDate: string;\n    points: number;\n    courseName: string;\n    priorityScore: number;\n}\n\n// Store for assignments\nlet assignments: Assignment[] = [];\n\n// Listen for messages from content script\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    console.log('Background received message:', message);\n\n    switch (message.type) {\n        case 'GET_ASSIGNMENTS':\n            // Return current assignments\n            sendResponse({ assignments });\n            break;\n\n        case 'ASSIGNMENTS_UPDATE':\n            // Update stored assignments\n            assignments = message.data;\n            // Notify all tabs about the update\n            chrome.tabs.query({}, (tabs) => {\n                tabs.forEach(tab => {\n                    if (tab.id) {\n                        chrome.tabs.sendMessage(tab.id, {\n                            type: 'ASSIGNMENTS_UPDATE',\n                            data: assignments\n                        }).catch(error => {\n                            console.log('Error sending message to tab:', error);\n                        });\n                    }\n                });\n            });\n            break;\n\n        case 'CLEAR_ASSIGNMENTS':\n            assignments = [];\n            sendResponse({ success: true });\n            break;\n    }\n\n    // Return true to indicate we'll send a response asynchronously\n    return true;\n});\n\n// Handle extension installation or update\nchrome.runtime.onInstalled.addListener(() => {\n    console.log('Extension installed/updated');\n    // Initialize storage\n    chrome.storage.local.set({\n        settings: {\n            displayOptions: {\n                showOutsideCanvas: true\n            }\n        }\n    });\n});\n\n// Handle alarm for periodic assignment updates\nchrome.alarms.create('refreshAssignments', {\n    periodInMinutes: 5 // Check every 5 minutes\n});\n\nchrome.alarms.onAlarm.addListener((alarm) => {\n    if (alarm.name === 'refreshAssignments') {\n        // Notify tabs to refresh assignments\n        chrome.tabs.query({}, (tabs) => {\n            tabs.forEach(tab => {\n                if (tab.id) {\n                    chrome.tabs.sendMessage(tab.id, {\n                        type: 'REFRESH_ASSIGNMENTS'\n                    }).catch(error => {\n                        console.log('Error sending refresh message to tab:', error);\n                    });\n                }\n            });\n        });\n    }\n});\n"],"names":["console","log","assignments","chrome","runtime","onMessage","addListener","message","sender","sendResponse","type","data","tabs","query","forEach","tab","id","sendMessage","catch","error","success","onInstalled","storage","local","set","settings","displayOptions","showOutsideCanvas","alarms","create","periodInMinutes","onAlarm","alarm","name"],"sourceRoot":""}