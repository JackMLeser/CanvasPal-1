{"version":3,"file":"background/index.js","mappings":"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","sources":["webpack://canvaspal/webpack/runtime/chunk loaded","webpack://canvaspal/./src/utils/calendar.ts","webpack://canvaspal/./src/utils/priorities.ts","webpack://canvaspal/./src/utils/logger.ts","webpack://canvaspal/./src/background/index.ts","webpack://canvaspal/webpack/bootstrap","webpack://canvaspal/webpack/runtime/hasOwnProperty shorthand","webpack://canvaspal/webpack/runtime/jsonp chunk loading","webpack://canvaspal/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import * as ICAL from 'ical.js';\nexport const parseICalFeed = (icalData) => {\n    const jCalData = ICAL.parse(icalData);\n    const comp = new ICAL.Component(jCalData);\n    const vevents = comp.getAllSubcomponents('vevent');\n    return vevents.map(vevent => {\n        const event = new ICAL.Event(vevent);\n        return {\n            title: event.summary,\n            dueDate: event.startDate.toJSDate(),\n            courseId: event.uid.split('_')[0],\n            assignmentId: event.uid.split('_')[1]\n        };\n    });\n};\n","export const calculatePriority = (event, settings) => {\n    const daysUntilDue = (event.dueDate.getTime() - Date.now()) / (1000 * 60 * 60 * 24);\n    const dueScore = Math.max(0, 10 - daysUntilDue);\n    return dueScore * settings.dueDateWeight;\n};\n","export var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"WARN\"] = \"WARN\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n})(LogLevel || (LogLevel = {}));\nexport class Logger {\n    constructor() {\n        this.cleanOldLogs();\n    }\n    static getInstance() {\n        if (!Logger.instance) {\n            Logger.instance = new Logger();\n        }\n        return Logger.instance;\n    }\n    async log(level, message, data) {\n        const entry = {\n            timestamp: new Date().toISOString(),\n            level,\n            message,\n            data,\n            stack: Error().stack\n        };\n        await this.saveLogs(entry);\n        if (level === LogLevel.ERROR) {\n            this.notifyError(entry);\n        }\n    }\n    async saveLogs(entry) {\n        const { logs = [] } = await chrome.storage.local.get('logs');\n        logs.push(entry);\n        if (logs.length > Logger.MAX_LOGS) {\n            logs.splice(0, logs.length - Logger.MAX_LOGS);\n        }\n        await chrome.storage.local.set({ logs });\n    }\n    async cleanOldLogs() {\n        const { logs = [] } = await chrome.storage.local.get('logs');\n        const thirtyDaysAgo = new Date();\n        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n        const filteredLogs = logs.filter((log) => new Date(log.timestamp) > thirtyDaysAgo);\n        await chrome.storage.local.set({ logs: filteredLogs });\n    }\n    notifyError(entry) {\n        chrome.notifications.create({\n            type: 'basic',\n            iconUrl: 'icons/icon128.png',\n            title: 'CanvasPal Error',\n            message: entry.message,\n            priority: 2\n        });\n    }\n    async getLogs(level) {\n        const { logs = [] } = await chrome.storage.local.get('logs');\n        return level ? logs.filter((log) => log.level === level) : logs;\n    }\n}\nLogger.MAX_LOGS = 1000;\nexport const logger = Logger.getInstance();\n","import { parseICalFeed } from '../utils/calendar';\nimport { calculatePriority } from '../utils/priorities';\nimport { logger, LogLevel } from '../utils/logger';\nexport class BackgroundService {\n    constructor() {\n        this.gradeData = {};\n        this.lastSyncTime = 0;\n        this.initialize();\n    }\n    async initialize() {\n        const settings = await chrome.storage.sync.get('settings');\n        if (!settings.settings) {\n            // Initialize default settings if none exist\n            const defaultSettings = {\n                icalUrl: '',\n                refreshInterval: 30,\n                priorities: {\n                    dueDate: 0.4,\n                    gradeWeight: 0.3,\n                    gradeImpact: 0.3\n                }\n            };\n            await chrome.storage.sync.set({ settings: defaultSettings });\n        }\n        this.startPeriodicSync();\n    }\n    async fetchCalendarData(url) {\n        const response = await fetch(url);\n        const icalData = await response.text();\n        return parseICalFeed(icalData);\n    }\n    handleGradeData(data) {\n        this.gradeData[data.courseName] = data;\n        chrome.storage.local.set({ [`grades_${data.courseName}`]: data });\n    }\n    startPeriodicSync() {\n        if (this.syncIntervalId) {\n            window.clearInterval(this.syncIntervalId);\n            this.syncIntervalId = undefined;\n        }\n        if (this.retryTimeoutId) {\n            window.clearTimeout(this.retryTimeoutId);\n            this.retryTimeoutId = undefined;\n        }\n        void this.performSync();\n        const intervalId = window.setInterval(() => { void this.performSync(); }, BackgroundService.SYNC_INTERVAL);\n        this.syncIntervalId = intervalId;\n    }\n    async performSync() {\n        try {\n            const now = Date.now();\n            if (now - this.lastSyncTime < 60000) {\n                return;\n            }\n            await this.fetchAndProcessAssignments();\n            this.lastSyncTime = now;\n            await logger.log(LogLevel.INFO, 'Sync completed successfully');\n            chrome.runtime.sendMessage({ type: \"syncComplete\", timestamp: now });\n        }\n        catch (error) {\n            await logger.log(LogLevel.ERROR, 'Sync failed', error);\n            console.error(\"Sync failed:\", error);\n            const timeoutId = window.setTimeout(() => {\n                void this.performSync();\n            }, BackgroundService.RETRY_INTERVAL);\n            this.retryTimeoutId = timeoutId;\n            chrome.runtime.sendMessage({\n                type: \"syncError\",\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            });\n        }\n    }\n    async fetchAndProcessAssignments() {\n        const { settings } = await chrome.storage.sync.get('settings');\n        if (!(settings === null || settings === void 0 ? void 0 : settings.icalUrl)) {\n            throw new Error(\"iCalendar URL not set\");\n        }\n        try {\n            const response = await fetch(settings.icalUrl);\n            const icalData = await response.text();\n            const assignments = this.parseICalData(icalData);\n            return this.enrichAssignmentsWithGrades(assignments);\n        }\n        catch (error) {\n            console.error(\"Failed to fetch or parse iCal data:\", error);\n            throw new Error(\"Failed to fetch assignments\");\n        }\n    }\n    enrichAssignmentsWithGrades(assignments) {\n        return assignments.map(assignment => (Object.assign(Object.assign({}, assignment), this.findGradeInfo(assignment))));\n    }\n    findGradeInfo(assignment) {\n        const courseData = this.gradeData[assignment.courseId];\n        if (!courseData)\n            return {};\n        const gradeInfo = courseData.assignments.find((a) => a.name.toLowerCase() === assignment.title.toLowerCase());\n        if (!gradeInfo)\n            return {};\n        return {\n            gradeWeight: gradeInfo.weight,\n            pointsPossible: gradeInfo.pointsPossible,\n            currentScore: gradeInfo.points\n        };\n    }\n    parseICalData(icalData) {\n        return parseICalFeed(icalData).map(event => (Object.assign(Object.assign({}, event), { courseId: this.extractCourseId(event.courseId) })));\n    }\n    extractCourseId(description) {\n        const courseMatch = description.match(/Course: (.*?)(?:\\n|$)/);\n        return courseMatch ? courseMatch[1] : \"Unknown Course\";\n    }\n}\nBackgroundService.SYNC_INTERVAL = 30 * 60 * 1000;\nBackgroundService.RETRY_INTERVAL = 5 * 60 * 1000;\nexport const backgroundService = new BackgroundService();\nchrome.runtime.onInstalled.addListener(() => {\n    // Initialize default settings\n    chrome.storage.local.set({\n        calendarUrl: '',\n        priorities: {\n            dueDate: 0.4,\n            gradeWeight: 0.3,\n            gradeImpact: 0.3\n        }\n    });\n});\n// Set up periodic sync\nchrome.alarms.create('sync', { periodInMinutes: 30 });\nchrome.alarms.onAlarm.addListener(async (alarm) => {\n    if (alarm.name === 'sync') {\n        try {\n            const { calendarUrl } = await chrome.storage.local.get('calendarUrl');\n            if (calendarUrl) {\n                const assignments = await parseICalFeed(calendarUrl);\n                const prioritizedAssignments = await calculatePriorities(assignments);\n                await chrome.storage.local.set({ assignments: prioritizedAssignments });\n            }\n        }\n        catch (error) {\n            console.error('Sync failed:', error);\n        }\n    }\n});\nasync function calculatePriorities(assignments) {\n    const { priorities } = await chrome.storage.local.get('priorities');\n    return assignments.map(assignment => (Object.assign(Object.assign({}, assignment), { priority: calculatePriority(assignment, priorities) })));\n}\nclass BackgroundWorker {\n    constructor() {\n        this.settings = {\n            feedUrl: '',\n            refreshInterval: 30\n        };\n        this.assignments = [];\n        this.init();\n    }\n    async init() {\n        await this.loadSettings();\n        this.setupPeriodicSync();\n        this.setupMessageListeners();\n    }\n    async loadSettings() {\n        const stored = await chrome.storage.local.get('settings');\n        if (stored.settings) {\n            this.settings = stored.settings;\n        }\n    }\n    setupMessageListeners() {\n        chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n            switch (message.type) {\n                case 'GET_ASSIGNMENTS':\n                    this.getAssignments().then(sendResponse);\n                    return true;\n                case 'UPDATE_SETTINGS':\n                    this.updateSettings(message.settings).then(sendResponse);\n                    return true;\n                case 'UPDATE_COMPLETION':\n                    this.updateAssignmentCompletion(message.assignmentId, message.completed)\n                        .then(() => sendResponse({ success: true }))\n                        .catch(error => sendResponse({ error: error.message }));\n                    return true;\n            }\n        });\n    }\n    setupPeriodicSync() {\n        setInterval(() => void this.syncData(), this.settings.refreshInterval * 60 * 1000);\n    }\n    async syncData() {\n        try {\n            if (!this.settings.feedUrl)\n                return;\n            const response = await fetch(this.settings.feedUrl);\n            const icsData = await response.text();\n            const calendarEvents = await parseICalFeed(icsData);\n            this.assignments = calendarEvents.map(event => ({\n                id: `${event.courseId}-${event.title}-${event.dueDate.getTime()}`,\n                title: event.title,\n                dueDate: event.dueDate,\n                course: event.courseId || 'Unknown',\n                priorityScore: this.calculatePriority(event),\n                completed: false\n            }));\n            await this.saveAssignments(this.assignments);\n            chrome.runtime.sendMessage({ type: 'SYNC_COMPLETE' });\n        }\n        catch (error) {\n            console.error('Sync failed:', error);\n            chrome.runtime.sendMessage({ type: 'SYNC_ERROR', error });\n        }\n    }\n    calculatePriority(event) {\n        // Priority calculation based on due date\n        const now = new Date();\n        const dueDate = new Date(event.dueDate);\n        const timeRemaining = dueDate.getTime() - now.getTime();\n        const dueDateFactor = Math.max(0, Math.min(1, 1 - (timeRemaining / (7 * 24 * 60 * 60 * 1000))));\n        return dueDateFactor;\n    }\n    async saveAssignments(assignments) {\n        await chrome.storage.local.set({ assignments });\n    }\n    async getAssignments() {\n        const data = await chrome.storage.local.get('assignments');\n        return data.assignments || [];\n    }\n    async updateSettings(newSettings) {\n        this.settings = Object.assign(Object.assign({}, this.settings), newSettings);\n        await chrome.storage.local.set({ settings: this.settings });\n        await this.syncData();\n    }\n    async updateAssignmentCompletion(assignmentId, completed) {\n        const assignments = await this.getAssignments();\n        const updatedAssignments = assignments.map((assignment) => assignment.id === assignmentId\n            ? Object.assign(Object.assign({}, assignment), { completed }) : assignment);\n        await this.saveAssignments(updatedAssignments);\n        chrome.runtime.sendMessage({\n            type: 'ASSIGNMENTS_UPDATED',\n            assignments: updatedAssignments\n        });\n    }\n}\n// Initialize the background worker\nconst backgroundWorker = new BackgroundWorker();\n// Add keyboard command listener\nchrome.commands.onCommand.addListener((command) => {\n    if (command === 'refresh-assignments') {\n        void backgroundWorker.syncData();\n    }\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t286: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcanvaspal\"] = self[\"webpackChunkcanvaspal\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [281], () => (__webpack_require__(429)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","parseICalFeed","icalData","jCalData","getAllSubcomponents","map","vevent","event","title","summary","dueDate","startDate","toJSDate","courseId","uid","split","assignmentId","calculatePriority","settings","daysUntilDue","getTime","Date","now","Math","max","dueDateWeight","LogLevel","Logger","constructor","this","cleanOldLogs","getInstance","instance","log","level","message","data","entry","timestamp","toISOString","stack","Error","saveLogs","ERROR","notifyError","logs","chrome","storage","local","get","push","length","MAX_LOGS","splice","set","thirtyDaysAgo","setDate","getDate","filteredLogs","filter","notifications","create","type","iconUrl","priority","getLogs","logger","BackgroundService","gradeData","lastSyncTime","initialize","sync","defaultSettings","icalUrl","refreshInterval","priorities","gradeWeight","gradeImpact","startPeriodicSync","fetchCalendarData","url","response","fetch","text","handleGradeData","courseName","syncIntervalId","window","clearInterval","undefined","retryTimeoutId","clearTimeout","performSync","intervalId","setInterval","SYNC_INTERVAL","fetchAndProcessAssignments","INFO","runtime","sendMessage","error","console","timeoutId","setTimeout","RETRY_INTERVAL","assignments","parseICalData","enrichAssignmentsWithGrades","assignment","Object","assign","findGradeInfo","courseData","gradeInfo","find","a","name","toLowerCase","weight","pointsPossible","currentScore","points","extractCourseId","description","courseMatch","match","onInstalled","addListener","calendarUrl","alarms","periodInMinutes","onAlarm","async","alarm","prioritizedAssignments","calculatePriorities","backgroundWorker","feedUrl","init","loadSettings","setupPeriodicSync","setupMessageListeners","stored","onMessage","sender","sendResponse","getAssignments","then","updateSettings","updateAssignmentCompletion","completed","success","catch","syncData","icsData","calendarEvents","id","course","priorityScore","saveAssignments","timeRemaining","min","newSettings","updatedAssignments","commands","onCommand","command","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","r","o","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}