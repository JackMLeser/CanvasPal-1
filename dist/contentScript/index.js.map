{"version":3,"file":"contentScript/index.js","mappings":"mBACA,MAAMA,EACF,eAAAC,GAGI,MAAO,CACHC,WAHeC,KAAKC,gBAIpBC,YAHgBF,KAAKG,iBAK7B,CACA,aAAAF,GACI,MAAMG,EAAgBC,SAASC,cAAcT,EAAiBU,sBAC9D,OAAOH,GAAeI,aAAaC,QAAU,gBACjD,CACA,cAAAN,GACI,MAAMO,EAAOL,SAASM,iBAAiBd,EAAiBe,sBACxD,OAAOC,MAAMC,KAAKJ,GAAMK,KAAIC,IACxB,MAAMC,EAAcD,EAAIV,cAAc,UAChCY,EAAeF,EAAIV,cAAc,UACjCa,EAAkBH,EAAIV,cAAc,oBAI1C,MAAO,CACHc,KAJSH,GAAaT,aAAaC,QAAU,GAK7CY,OAJWrB,KAAKsB,cAAcJ,GAAcV,aAK5Ce,eAJmBvB,KAAKsB,cAAcH,GAAiBX,aAKvDgB,OAAQxB,KAAKyB,oBAAoBT,GACpC,GAET,CACA,aAAAM,CAAcI,GACV,IAAKA,EACD,OAAO,EACX,MAAMC,EAAQD,EAAKC,MAAM,UACzB,OAAOA,EAAQC,WAAWD,EAAM,IAAM,CAC1C,CACA,mBAAAF,CAAoBT,GAEhB,MAAMa,EAAWb,EAAIc,QAAQ,qBAC7B,IAAKD,EACD,OACJ,MAAME,EAAaF,EAASvB,cAAc,kBAAkBE,YAC5D,OAAKuB,EAEE/B,KAAKsB,cAAcS,QAF1B,CAGJ,EAKJ,GAHAlC,EAAiBe,qBAAuB,sBACxCf,EAAiBU,qBAAuB,gBAEpCyB,OAAOC,SAASC,KAAKC,SAAS,WAAY,CAC1C,MACMC,GADU,IAAIvC,GACMC,kBAE1BuC,OAAOC,QAAQC,YAAY,CACvBC,KAAM,YACNC,KAAML,GAEd,C","sources":["webpack://canvaspal/./src/contentScript/index.ts"],"sourcesContent":["\"use strict\";\nclass GradeDataScraper {\n    scrapeGradeData() {\n        const courseName = this.getCourseName();\n        const assignments = this.getAssignments();\n        return {\n            courseName,\n            assignments\n        };\n    }\n    getCourseName() {\n        const courseElement = document.querySelector(GradeDataScraper.COURSE_NAME_SELECTOR);\n        return courseElement?.textContent?.trim() || 'Unknown Course';\n    }\n    getAssignments() {\n        const rows = document.querySelectorAll(GradeDataScraper.GRADE_TABLE_SELECTOR);\n        return Array.from(rows).map(row => {\n            const nameElement = row.querySelector('.title');\n            const scoreElement = row.querySelector('.grade');\n            const possibleElement = row.querySelector('.points_possible');\n            const name = nameElement?.textContent?.trim() || '';\n            const points = this.extractNumber(scoreElement?.textContent);\n            const pointsPossible = this.extractNumber(possibleElement?.textContent);\n            return {\n                name,\n                points,\n                pointsPossible,\n                weight: this.getAssignmentWeight(row)\n            };\n        });\n    }\n    extractNumber(text) {\n        if (!text)\n            return 0;\n        const match = text.match(/[\\d.]+/);\n        return match ? parseFloat(match[0]) : 0;\n    }\n    getAssignmentWeight(row) {\n        // Try to find assignment group and its weight\n        const groupRow = row.closest('.assignment_group');\n        if (!groupRow)\n            return undefined;\n        const weightText = groupRow.querySelector('.group_weight')?.textContent;\n        if (!weightText)\n            return undefined;\n        return this.extractNumber(weightText);\n    }\n}\nGradeDataScraper.GRADE_TABLE_SELECTOR = '.student_assignment';\nGradeDataScraper.COURSE_NAME_SELECTOR = '.course-title';\n// Initialize scraper when on a Canvas grades page\nif (window.location.href.includes('/grades')) {\n    const scraper = new GradeDataScraper();\n    const gradeData = scraper.scrapeGradeData();\n    // Send grade data to background script\n    chrome.runtime.sendMessage({\n        type: 'gradeData',\n        data: gradeData\n    });\n}\n"],"names":["GradeDataScraper","scrapeGradeData","courseName","this","getCourseName","assignments","getAssignments","courseElement","document","querySelector","COURSE_NAME_SELECTOR","textContent","trim","rows","querySelectorAll","GRADE_TABLE_SELECTOR","Array","from","map","row","nameElement","scoreElement","possibleElement","name","points","extractNumber","pointsPossible","weight","getAssignmentWeight","text","match","parseFloat","groupRow","closest","weightText","window","location","href","includes","gradeData","chrome","runtime","sendMessage","type","data"],"sourceRoot":""}