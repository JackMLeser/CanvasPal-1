{"version":3,"file":"background.js","mappings":"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","sources":["webpack://canvaspal/webpack/runtime/chunk loaded","webpack://canvaspal/./src/utils/calendar.ts","webpack://canvaspal/./src/utils/priorities.ts","webpack://canvaspal/./src/utils/logger.ts","webpack://canvaspal/./src/background/index.ts","webpack://canvaspal/webpack/bootstrap","webpack://canvaspal/webpack/runtime/hasOwnProperty shorthand","webpack://canvaspal/webpack/runtime/jsonp chunk loading","webpack://canvaspal/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import * as ICAL from 'ical.js';\nexport const parseICalFeed = (icalData) => {\n    const jCalData = ICAL.parse(icalData);\n    const comp = new ICAL.Component(jCalData);\n    const vevents = comp.getAllSubcomponents('vevent');\n    return vevents.map(vevent => {\n        const event = new ICAL.Event(vevent);\n        return {\n            title: event.summary,\n            dueDate: event.startDate.toJSDate(),\n            courseId: event.uid.split('_')[0],\n            assignmentId: event.uid.split('_')[1]\n        };\n    });\n};\n","export const calculatePriority = (event, settings) => {\n    const daysUntilDue = (event.dueDate.getTime() - Date.now()) / (1000 * 60 * 60 * 24);\n    const dueScore = Math.max(0, 10 - daysUntilDue);\n    return dueScore * settings.dueDateWeight;\n};\n","export var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"WARN\"] = \"WARN\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n})(LogLevel || (LogLevel = {}));\nexport class Logger {\n    constructor() {\n        this.cleanOldLogs();\n    }\n    static getInstance() {\n        if (!Logger.instance) {\n            Logger.instance = new Logger();\n        }\n        return Logger.instance;\n    }\n    async log(level, message, data) {\n        const entry = {\n            timestamp: new Date().toISOString(),\n            level,\n            message,\n            data,\n            stack: Error().stack\n        };\n        await this.saveLogs(entry);\n        if (level === LogLevel.ERROR) {\n            this.notifyError(entry);\n        }\n    }\n    async saveLogs(entry) {\n        const { logs = [] } = await chrome.storage.local.get('logs');\n        logs.push(entry);\n        if (logs.length > Logger.MAX_LOGS) {\n            logs.splice(0, logs.length - Logger.MAX_LOGS);\n        }\n        await chrome.storage.local.set({ logs });\n    }\n    async cleanOldLogs() {\n        const { logs = [] } = await chrome.storage.local.get('logs');\n        const thirtyDaysAgo = new Date();\n        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n        const filteredLogs = logs.filter((log) => new Date(log.timestamp) > thirtyDaysAgo);\n        await chrome.storage.local.set({ logs: filteredLogs });\n    }\n    notifyError(entry) {\n        chrome.notifications.create({\n            type: 'basic',\n            iconUrl: 'icons/icon128.png',\n            title: 'CanvasPal Error',\n            message: entry.message,\n            priority: 2\n        });\n    }\n    async getLogs(level) {\n        const { logs = [] } = await chrome.storage.local.get('logs');\n        return level ? logs.filter((log) => log.level === level) : logs;\n    }\n}\nLogger.MAX_LOGS = 1000;\nexport const logger = Logger.getInstance();\n","import { parseICalFeed } from '../utils/calendar';\nimport { calculatePriority } from '../utils/priorities';\nimport { logger, LogLevel } from '../utils/logger';\nexport class BackgroundService {\n    constructor() {\n        this.gradeData = {};\n        this.lastSyncTime = 0;\n        this.initialize();\n    }\n    async initialize() {\n        const storedData = await chrome.storage.local.get(null);\n        const entries = Object.entries(storedData);\n        for (const [key, value] of entries) {\n            if (key.startsWith(\"grades_\")) {\n                const courseName = key.replace(\"grades_\", \"\");\n                this.gradeData[courseName] = value;\n            }\n        }\n        chrome.runtime.onInstalled.addListener(() => {\n            this.startPeriodicSync();\n        });\n        this.startPeriodicSync();\n        chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n            if (message.type === \"GET_ASSIGNMENTS\") {\n                this.fetchAndProcessAssignments()\n                    .then(assignments => sendResponse(assignments))\n                    .catch(error => sendResponse({ error: error.message }));\n                return true;\n            }\n            if (message.type === \"fetchAssignments\") {\n                this.fetchAndProcessAssignments()\n                    .then(sendResponse)\n                    .catch(error => sendResponse({ error: error.message }));\n                return true;\n            }\n            if (message.type === \"gradeData\") {\n                this.handleGradeData(message.data);\n                sendResponse({ success: true });\n                return true;\n            }\n            if (message.type === \"forceSync\") {\n                this.performSync()\n                    .then(() => sendResponse({ success: true }))\n                    .catch(error => sendResponse({ error: error.message }));\n                return true;\n            }\n        });\n    }\n    async fetchCalendarData(url) {\n        const response = await fetch(url);\n        const icalData = await response.text();\n        return parseICalFeed(icalData);\n    }\n    handleGradeData(data) {\n        this.gradeData[data.courseName] = data;\n        chrome.storage.local.set({ [`grades_${data.courseName}`]: data });\n    }\n    startPeriodicSync() {\n        if (this.syncIntervalId) {\n            window.clearInterval(this.syncIntervalId);\n            this.syncIntervalId = undefined;\n        }\n        if (this.retryTimeoutId) {\n            window.clearTimeout(this.retryTimeoutId);\n            this.retryTimeoutId = undefined;\n        }\n        void this.performSync();\n        const intervalId = window.setInterval(() => { void this.performSync(); }, BackgroundService.SYNC_INTERVAL);\n        this.syncIntervalId = intervalId;\n    }\n    async performSync() {\n        try {\n            const now = Date.now();\n            if (now - this.lastSyncTime < 60000) {\n                return;\n            }\n            await this.fetchAndProcessAssignments();\n            this.lastSyncTime = now;\n            await logger.log(LogLevel.INFO, 'Sync completed successfully');\n            chrome.runtime.sendMessage({ type: \"syncComplete\", timestamp: now });\n        }\n        catch (error) {\n            await logger.log(LogLevel.ERROR, 'Sync failed', error);\n            console.error(\"Sync failed:\", error);\n            const timeoutId = window.setTimeout(() => {\n                void this.performSync();\n            }, BackgroundService.RETRY_INTERVAL);\n            this.retryTimeoutId = timeoutId;\n            chrome.runtime.sendMessage({\n                type: \"syncError\",\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            });\n        }\n    }\n    async fetchAndProcessAssignments() {\n        const { icalUrl } = await chrome.storage.sync.get(\"icalUrl\");\n        if (!icalUrl) {\n            throw new Error(\"iCalendar URL not set\");\n        }\n        try {\n            const response = await fetch(icalUrl);\n            const icalData = await response.text();\n            const assignments = this.parseICalData(icalData);\n            return this.enrichAssignmentsWithGrades(assignments);\n        }\n        catch (error) {\n            console.error(\"Failed to fetch or parse iCal data:\", error);\n            throw new Error(\"Failed to fetch assignments\");\n        }\n    }\n    enrichAssignmentsWithGrades(assignments) {\n        return assignments.map(assignment => (Object.assign(Object.assign({}, assignment), this.findGradeInfo(assignment))));\n    }\n    findGradeInfo(assignment) {\n        const courseData = this.gradeData[assignment.courseId];\n        if (!courseData)\n            return {};\n        const gradeInfo = courseData.assignments.find((a) => a.name.toLowerCase() === assignment.title.toLowerCase());\n        if (!gradeInfo)\n            return {};\n        return {\n            gradeWeight: gradeInfo.weight,\n            pointsPossible: gradeInfo.pointsPossible,\n            currentScore: gradeInfo.points\n        };\n    }\n    parseICalData(icalData) {\n        return parseICalFeed(icalData).map(event => (Object.assign(Object.assign({}, event), { courseId: this.extractCourseId(event.courseId) })));\n    }\n    extractCourseId(description) {\n        const courseMatch = description.match(/Course: (.*?)(?:\\n|$)/);\n        return courseMatch ? courseMatch[1] : \"Unknown Course\";\n    }\n}\nBackgroundService.SYNC_INTERVAL = 30 * 60 * 1000;\nBackgroundService.RETRY_INTERVAL = 5 * 60 * 1000;\nexport const backgroundService = new BackgroundService();\nchrome.runtime.onInstalled.addListener(() => {\n    // Initialize default settings\n    chrome.storage.local.set({\n        calendarUrl: '',\n        priorities: {\n            dueDate: 0.4,\n            gradeWeight: 0.3,\n            gradeImpact: 0.3\n        }\n    });\n});\n// Set up periodic sync\nchrome.alarms.create('sync', { periodInMinutes: 30 });\nchrome.alarms.onAlarm.addListener(async (alarm) => {\n    if (alarm.name === 'sync') {\n        try {\n            const { calendarUrl } = await chrome.storage.local.get('calendarUrl');\n            if (calendarUrl) {\n                const assignments = await parseICalFeed(calendarUrl);\n                const prioritizedAssignments = await calculatePriorities(assignments);\n                await chrome.storage.local.set({ assignments: prioritizedAssignments });\n            }\n        }\n        catch (error) {\n            console.error('Sync failed:', error);\n        }\n    }\n});\nasync function calculatePriorities(assignments) {\n    const { priorities } = await chrome.storage.local.get('priorities');\n    return assignments.map(assignment => (Object.assign(Object.assign({}, assignment), { priority: calculatePriority(assignment, priorities) })));\n}\nclass BackgroundWorker {\n    constructor() {\n        this.settings = {\n            feedUrl: '',\n            refreshInterval: 30\n        };\n        this.assignments = [];\n        this.init();\n    }\n    async init() {\n        await this.loadSettings();\n        this.setupPeriodicSync();\n        this.setupMessageListeners();\n    }\n    async loadSettings() {\n        const stored = await chrome.storage.local.get('settings');\n        if (stored.settings) {\n            this.settings = stored.settings;\n        }\n    }\n    setupMessageListeners() {\n        chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n            switch (message.type) {\n                case 'GET_ASSIGNMENTS':\n                    this.getAssignments().then(sendResponse);\n                    return true;\n                case 'UPDATE_SETTINGS':\n                    this.updateSettings(message.settings).then(sendResponse);\n                    return true;\n                case 'UPDATE_COMPLETION':\n                    this.updateAssignmentCompletion(message.assignmentId, message.completed)\n                        .then(() => sendResponse({ success: true }))\n                        .catch(error => sendResponse({ error: error.message }));\n                    return true;\n            }\n        });\n    }\n    setupPeriodicSync() {\n        setInterval(() => void this.syncData(), this.settings.refreshInterval * 60 * 1000);\n    }\n    async syncData() {\n        try {\n            if (!this.settings.feedUrl)\n                return;\n            const response = await fetch(this.settings.feedUrl);\n            const icsData = await response.text();\n            const calendarEvents = await parseICalFeed(icsData);\n            this.assignments = calendarEvents.map(event => ({\n                id: `${event.courseId}-${event.title}-${event.dueDate.getTime()}`,\n                title: event.title,\n                dueDate: event.dueDate,\n                course: event.courseId || 'Unknown',\n                priorityScore: this.calculatePriority(event),\n                completed: false\n            }));\n            await this.saveAssignments(this.assignments);\n            chrome.runtime.sendMessage({ type: 'SYNC_COMPLETE' });\n        }\n        catch (error) {\n            console.error('Sync failed:', error);\n            chrome.runtime.sendMessage({ type: 'SYNC_ERROR', error });\n        }\n    }\n    calculatePriority(event) {\n        // Priority calculation based on due date\n        const now = new Date();\n        const dueDate = new Date(event.dueDate);\n        const timeRemaining = dueDate.getTime() - now.getTime();\n        const dueDateFactor = Math.max(0, Math.min(1, 1 - (timeRemaining / (7 * 24 * 60 * 60 * 1000))));\n        return dueDateFactor;\n    }\n    async saveAssignments(assignments) {\n        await chrome.storage.local.set({ assignments });\n    }\n    async getAssignments() {\n        const data = await chrome.storage.local.get('assignments');\n        return data.assignments || [];\n    }\n    async updateSettings(newSettings) {\n        this.settings = Object.assign(Object.assign({}, this.settings), newSettings);\n        await chrome.storage.local.set({ settings: this.settings });\n        await this.syncData();\n    }\n    async updateAssignmentCompletion(assignmentId, completed) {\n        const assignments = await this.getAssignments();\n        const updatedAssignments = assignments.map((assignment) => assignment.id === assignmentId\n            ? Object.assign(Object.assign({}, assignment), { completed }) : assignment);\n        await this.saveAssignments(updatedAssignments);\n        chrome.runtime.sendMessage({\n            type: 'ASSIGNMENTS_UPDATED',\n            assignments: updatedAssignments\n        });\n    }\n}\n// Initialize the background worker\nconst backgroundWorker = new BackgroundWorker();\n// Add keyboard command listener\nchrome.commands.onCommand.addListener((command) => {\n    if (command === 'refresh-assignments') {\n        void backgroundWorker.syncData();\n    }\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t471: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcanvaspal\"] = self[\"webpackChunkcanvaspal\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [225], () => (__webpack_require__(429)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","parseICalFeed","icalData","jCalData","getAllSubcomponents","map","vevent","event","title","summary","dueDate","startDate","toJSDate","courseId","uid","split","assignmentId","calculatePriority","settings","daysUntilDue","getTime","Date","now","Math","max","dueDateWeight","LogLevel","Logger","constructor","this","cleanOldLogs","getInstance","instance","log","level","message","data","entry","timestamp","toISOString","stack","Error","saveLogs","ERROR","notifyError","logs","chrome","storage","local","get","push","length","MAX_LOGS","splice","set","thirtyDaysAgo","setDate","getDate","filteredLogs","filter","notifications","create","type","iconUrl","priority","getLogs","logger","BackgroundService","gradeData","lastSyncTime","initialize","storedData","entries","Object","key","value","startsWith","courseName","replace","runtime","onInstalled","addListener","startPeriodicSync","onMessage","sender","sendResponse","fetchAndProcessAssignments","then","assignments","catch","error","handleGradeData","success","performSync","fetchCalendarData","url","response","fetch","text","syncIntervalId","window","clearInterval","undefined","retryTimeoutId","clearTimeout","intervalId","setInterval","SYNC_INTERVAL","INFO","sendMessage","console","timeoutId","setTimeout","RETRY_INTERVAL","icalUrl","sync","parseICalData","enrichAssignmentsWithGrades","assignment","assign","findGradeInfo","courseData","gradeInfo","find","a","name","toLowerCase","gradeWeight","weight","pointsPossible","currentScore","points","extractCourseId","description","courseMatch","match","calendarUrl","priorities","gradeImpact","alarms","periodInMinutes","onAlarm","async","alarm","prioritizedAssignments","calculatePriorities","backgroundWorker","feedUrl","refreshInterval","init","loadSettings","setupPeriodicSync","setupMessageListeners","stored","getAssignments","updateSettings","updateAssignmentCompletion","completed","syncData","icsData","calendarEvents","id","course","priorityScore","saveAssignments","timeRemaining","min","newSettings","updatedAssignments","commands","onCommand","command","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","keys","every","r","o","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}