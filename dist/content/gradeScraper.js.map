{"version":3,"file":"content/gradeScraper.js","mappings":"mBACA,MAAMA,EACF,YAAAC,GACI,IAAIC,EACJ,MAAMC,EAAgBC,SAASC,cAAcL,EAAaM,sBACpDC,EAAaH,SAASC,cAAcL,EAAaQ,sBACvD,OAAKL,GAAkBI,EAIhB,CACHE,YAHqD,QAApCP,EAAKC,EAAcO,mBAAgC,IAAPR,OAAgB,EAASA,EAAGS,SAAW,iBAIpGC,YAHgBC,KAAKC,kBAAkBP,IAFhC,IAOf,CACA,iBAAAO,CAAkBC,GACd,MAAMC,EAAOD,EAAME,iBAAiB,yBACpC,OAAOC,MAAMC,KAAKH,GAAMI,KAAIC,IAAO,CAC/BC,KAAMT,KAAKU,kBAAkBF,GAC7BG,OAAQX,KAAKY,UAAUJ,GACvBK,eAAgBb,KAAKc,kBAAkBN,GACvCO,OAAQf,KAAKgB,UAAUR,MAE/B,CACA,iBAAAE,CAAkBF,GACd,IAAInB,EAAI4B,EACR,OAAoH,QAA3GA,EAAsD,QAAhD5B,EAAKmB,EAAIhB,cAAc,2BAAwC,IAAPH,OAAgB,EAASA,EAAGQ,mBAAgC,IAAPoB,OAAgB,EAASA,EAAGnB,SAAW,oBACvK,CACA,SAAAc,CAAUJ,GACN,IAAInB,EAAI4B,EACR,MAAMN,EAA2G,QAAjGM,EAA4C,QAAtC5B,EAAKmB,EAAIhB,cAAc,iBAA8B,IAAPH,OAAgB,EAASA,EAAGQ,mBAAgC,IAAPoB,OAAgB,EAASA,EAAGnB,OACrJ,OAAOa,EAASO,WAAWP,GAAU,CACzC,CACA,iBAAAG,CAAkBN,GACd,IAAInB,EAAI4B,EACR,MAAME,EAAuH,QAA3GF,EAAsD,QAAhD5B,EAAKmB,EAAIhB,cAAc,2BAAwC,IAAPH,OAAgB,EAASA,EAAGQ,mBAAgC,IAAPoB,OAAgB,EAASA,EAAGnB,OACjK,OAAOqB,EAAWD,WAAWC,GAAY,CAC7C,CACA,SAAAH,CAAUR,GACN,IAAInB,EAAI4B,EACR,MAAMF,EAAuH,QAA7GE,EAAwD,QAAlD5B,EAAKmB,EAAIhB,cAAc,6BAA0C,IAAPH,OAAgB,EAASA,EAAGQ,mBAAgC,IAAPoB,OAAgB,EAASA,EAAGnB,OACjK,OAAOiB,EAASG,WAAWH,GAAU,CACzC,EAEJ5B,EAAaQ,qBAAuB,uBACpCR,EAAaM,qBAAuB,gBAEpC,MACM2B,GADU,IAAIjC,GACMC,eACtBgC,GACAC,OAAOC,QAAQC,YAAY,CACvBC,KAAM,aACNC,KAAML,G","sources":["webpack://canvaspal/./src/content/gradeScraper.ts"],"sourcesContent":["\"use strict\";\nclass GradeScraper {\n    scrapeGrades() {\n        var _a;\n        const courseElement = document.querySelector(GradeScraper.COURSE_NAME_SELECTOR);\n        const gradeTable = document.querySelector(GradeScraper.GRADE_TABLE_SELECTOR);\n        if (!courseElement || !gradeTable)\n            return null;\n        const courseName = ((_a = courseElement.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || 'Unknown Course';\n        const assignments = this.scrapeAssignments(gradeTable);\n        return {\n            courseName,\n            assignments\n        };\n    }\n    scrapeAssignments(table) {\n        const rows = table.querySelectorAll('tr.student_assignment');\n        return Array.from(rows).map(row => ({\n            name: this.getAssignmentName(row),\n            points: this.getPoints(row),\n            pointsPossible: this.getPointsPossible(row),\n            weight: this.getWeight(row)\n        }));\n    }\n    getAssignmentName(row) {\n        var _a, _b;\n        return ((_b = (_a = row.querySelector('.assignment_name')) === null || _a === void 0 ? void 0 : _a.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || 'Unknown Assignment';\n    }\n    getPoints(row) {\n        var _a, _b;\n        const points = (_b = (_a = row.querySelector('.grade')) === null || _a === void 0 ? void 0 : _a.textContent) === null || _b === void 0 ? void 0 : _b.trim();\n        return points ? parseFloat(points) : 0;\n    }\n    getPointsPossible(row) {\n        var _a, _b;\n        const possible = (_b = (_a = row.querySelector('.points_possible')) === null || _a === void 0 ? void 0 : _a.textContent) === null || _b === void 0 ? void 0 : _b.trim();\n        return possible ? parseFloat(possible) : 0;\n    }\n    getWeight(row) {\n        var _a, _b;\n        const weight = (_b = (_a = row.querySelector('.assignment_weight')) === null || _a === void 0 ? void 0 : _a.textContent) === null || _b === void 0 ? void 0 : _b.trim();\n        return weight ? parseFloat(weight) : 0;\n    }\n}\nGradeScraper.GRADE_TABLE_SELECTOR = '.student_assignments';\nGradeScraper.COURSE_NAME_SELECTOR = '.course-title';\n// Initialize scraper and send data to background service\nconst scraper = new GradeScraper();\nconst gradeData = scraper.scrapeGrades();\nif (gradeData) {\n    chrome.runtime.sendMessage({\n        type: 'GRADE_DATA',\n        data: gradeData\n    });\n}\n"],"names":["GradeScraper","scrapeGrades","_a","courseElement","document","querySelector","COURSE_NAME_SELECTOR","gradeTable","GRADE_TABLE_SELECTOR","courseName","textContent","trim","assignments","this","scrapeAssignments","table","rows","querySelectorAll","Array","from","map","row","name","getAssignmentName","points","getPoints","pointsPossible","getPointsPossible","weight","getWeight","_b","parseFloat","possible","gradeData","chrome","runtime","sendMessage","type","data"],"sourceRoot":""}