(()=>{"use strict";class e{constructor(){this.assignmentList=document.getElementById("assignmentList"),this.syncStatus=document.getElementById("sync-status"),this.dataFreshness=document.getElementById("data-freshness"),this.initializeEventListeners(),this.loadAssignments()}initializeEventListeners(){var e;null===(e=document.getElementById("openSettings"))||void 0===e||e.addEventListener("click",(()=>{chrome.runtime.openOptionsPage()})),chrome.runtime.onMessage.addListener((e=>{"SYNC_COMPLETE"===e.type?(this.updateStatus("Synced",new Date),this.loadAssignments()):"SYNC_ERROR"===e.type?this.updateStatus("Sync Failed",null):"ASSIGNMENTS_UPDATED"===e.type&&this.renderAssignments(e.assignments)}))}async loadAssignments(){this.assignmentList.innerHTML='<div class="loading">Loading assignments...</div>';try{const{settings:e}=await chrome.storage.sync.get("settings");if(!(null==e?void 0:e.icalUrl))return void(this.assignmentList.innerHTML='<div class="error">Please set your Canvas iCalendar Feed URL in settings</div>');const t=await chrome.runtime.sendMessage({type:"GET_ASSIGNMENTS"});if(t.error)return void(this.assignmentList.innerHTML=`<div class="error">Error: ${t.error}</div>`);if(!Array.isArray(t)||0===t.length)return void(this.assignmentList.innerHTML='<div class="no-assignments">No assignments found</div>');this.renderAssignments(t)}catch(e){console.error("Error loading assignments:",e),this.assignmentList.innerHTML='<div class="error">Failed to load assignments</div>'}}renderAssignments(e){if(!e.length)return void(this.assignmentList.innerHTML='<div class="no-assignments">No assignments found</div>');const t=e.sort(((e,t)=>t.priorityScore-e.priorityScore));this.assignmentList.innerHTML=t.map((e=>this.createAssignmentElement(e))).join("")}createAssignmentElement(e){const t=this.getPriorityClass(e.priorityScore),s=new Date(e.dueDate);return`\n            <div class="assignment-item ${t}" data-id="${e.id}">\n                <div class="assignment-header">\n                    <h3>${e.title}</h3>\n                    <div class="completion">\n                        <input type="checkbox" \n                               id="complete-${e.id}"\n                               ${e.completed?"checked":""} \n                               onchange="handleCompletionChange('${e.id}', this.checked)" />\n                    </div>\n                </div>\n                <div class="assignment-details">\n                    <div class="course">${e.course}</div>\n                    <div class="due-date">Due: ${s.toLocaleDateString()} ${s.toLocaleTimeString()}</div>\n                    ${e.gradeWeight?`<div class="weight">Weight: ${e.gradeWeight}%</div>`:""}\n                    <div class="priority">Priority: ${Math.round(100*e.priorityScore)}%</div>\n                </div>\n            </div>\n        `}getPriorityClass(e){return e>=.7?"high-priority":e>=.4?"medium-priority":"low-priority"}updateStatus(e,t){this.syncStatus.textContent=e,t&&(this.dataFreshness.textContent=`Updated: ${t.toLocaleTimeString()}`)}}window.handleCompletionChange=(e,t)=>{chrome.runtime.sendMessage({type:"UPDATE_COMPLETION",assignmentId:e,completed:t})},document.addEventListener("DOMContentLoaded",(()=>{new e}))})();
//# sourceMappingURL=popup.js.map