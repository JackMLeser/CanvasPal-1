(()=>{"use strict";var e={39:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.logger=t.Logger=t.LogLevel=void 0,function(e){e[e.DEBUG=0]="DEBUG",e[e.INFO=1]="INFO",e[e.WARN=2]="WARN",e[e.ERROR=3]="ERROR"}(n=t.LogLevel||(t.LogLevel={}));class i{constructor(e,t=n.INFO){this.context=e,this.currentLevel=t,this.cleanOldLogs()}static getInstance(e,t=n.INFO){const s=`${e}-${t}`;return this.instances.has(s)||this.instances.set(s,new i(e,t)),this.instances.get(s)}setLevel(e){this.currentLevel=e}debug(e,t){this.log(n.DEBUG,e,t)}info(e,t){this.log(n.INFO,e,t)}warn(e,t){this.log(n.WARN,e,t)}error(e,t){this.log(n.ERROR,e,t)}async log(e,t,...i){if(e>=this.currentLevel){const s=(new Date).toISOString(),r=`[${s}] ${this.getLogPrefix(e)} [${this.context}] ${t}`;if(i.length){const e=this.formatLogData(i);console.log(r,e)}else console.log(r);const o={timestamp:s,level:e,message:t,data:i,stack:Error().stack};this.saveLogs(o),e===n.ERROR&&this.notifyError(o)}}getLogPrefix(e){switch(e){case n.DEBUG:return"üîç DEBUG:";case n.INFO:return"üì¢ INFO:";case n.WARN:return"‚ö†Ô∏è WARN:";case n.ERROR:return"‚ùå ERROR:";default:return"üì¢"}}formatLogData(e){if(e instanceof Element)return{tagName:e.tagName,id:e.id,className:e.className,textContent:e.textContent?.substring(0,100)+"...",html:e.outerHTML?.substring(0,200)+"..."};if(Array.isArray(e))return e.map((e=>this.formatLogData(e)));if(e&&"object"==typeof e){const t={};for(const[n,i]of Object.entries(e))t[n]=this.formatLogData(i);return t}return e}async saveLogs(e){const{logs:t=[]}=await chrome.storage.local.get("logs");t.push(e),t.length>i.MAX_LOGS&&t.splice(0,t.length-i.MAX_LOGS),await chrome.storage.local.set({logs:t})}async cleanOldLogs(){const{logs:e=[]}=await chrome.storage.local.get("logs"),t=new Date;t.setDate(t.getDate()-30);const n=e.filter((e=>new Date(e.timestamp)>t));await chrome.storage.local.set({logs:n})}notifyError(e){chrome.notifications.create({type:"basic",iconUrl:"icons/icon128.png",title:"CanvasPal Error",message:e.message,priority:2})}async getLogs(e){const{logs:t=[]}=await chrome.storage.local.get("logs");return e?t.filter((t=>t.level===e)):t}}t.Logger=i,i.MAX_LOGS=1e3,i.instances=new Map,t.logger=i.getInstance("default")},405:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DebugManager=void 0;const i=n(39),s=n(780),r=n(736),o=n(971),a=n(929);t.DebugManager=class{constructor(){this.config={enabled:!1,logLevel:"info",showDateDebug:!1,showAssignmentDebug:!1,showPriorityDebug:!1,showPerformanceMetrics:!1},this.logger=new i.Logger("DebugManager"),this.mainPanel=new s.DebugPanel,this.datePanel=new r.DateDebugPanel,this.performanceMonitor=o.PerformanceMonitor.getInstance(),this.performanceLogger=new a.PerformanceLogger,this.initializeKeyboardShortcuts(),this.initializePerformanceLogging(),this.loadDebugConfig()}initializePerformanceLogging(){setInterval((async()=>{if(this.config.enabled&&this.config.showPerformanceMetrics){const e=this.performanceMonitor.getReport().metrics.filter((e=>void 0!==e.duration)).map((e=>({name:e.name,duration:e.duration,metadata:e.metadata})));await this.performanceLogger.logPerformance(e),this.config.showPerformanceMetrics&&await this.updatePerformanceAnalysis()}}),3e5)}async updatePerformanceAnalysis(){const e=await this.performanceLogger.getPerformanceAnalysis();this.mainPanel.updatePerformanceAnalysis(e)}initializeKeyboardShortcuts(){document.addEventListener("keydown",(e=>{if((e.ctrlKey||e.metaKey)&&e.shiftKey)switch(e.key){case"`":e.preventDefault(),this.toggleDebugMode();break;case"D":e.preventDefault(),this.mainPanel.toggleVisibility();break;case"T":e.preventDefault(),this.datePanel.toggleVisibility();break;case"P":e.preventDefault(),this.togglePerformanceMetrics()}}))}async togglePerformanceMetrics(){this.config.showPerformanceMetrics=!this.config.showPerformanceMetrics,this.config.showPerformanceMetrics&&await this.updatePerformanceAnalysis(),this.saveDebugConfig()}async loadDebugConfig(){try{const e=await chrome.storage.sync.get("debugConfig");e.debugConfig&&(this.config={...this.config,...e.debugConfig},this.applyConfig())}catch(e){this.logger.error("Error loading debug config:",e)}}async saveDebugConfig(){try{await chrome.storage.sync.set({debugConfig:this.config})}catch(e){this.logger.error("Error saving debug config:",e)}}applyConfig(){this.config.enabled?(this.logger.setLevel(this.getLogLevel()),this.config.showDateDebug&&this.datePanel.toggleVisibility(),(this.config.showAssignmentDebug||this.config.showPriorityDebug)&&this.mainPanel.toggleVisibility()):this.disableAllPanels()}disableAllPanels(){document.querySelectorAll('[id$="-debug-panel"]').forEach((e=>{e.style.display="none"}))}toggleDebugMode(){this.config.enabled=!this.config.enabled,this.applyConfig(),this.saveDebugConfig(),this.logger.info("Debug mode "+(this.config.enabled?"enabled":"disabled"))}updateDebugConfig(e){this.config={...this.config,...e},this.applyConfig(),this.saveDebugConfig()}getLogLevel(){switch(this.config.logLevel){case"debug":return 0;case"info":default:return 1;case"warn":return 2;case"error":return 3}}getMainPanel(){return this.mainPanel}getDatePanel(){return this.datePanel}isDebugEnabled(){return this.config.enabled}getConfig(){return{...this.config}}async clearPerformanceLogs(){await this.performanceLogger.clearLogs(),this.config.showPerformanceMetrics&&await this.updatePerformanceAnalysis()}async getPerformanceAnalysis(){return this.performanceLogger.getPerformanceAnalysis()}}},736:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DateDebugPanel=void 0;const i=n(39);t.DateDebugPanel=class{constructor(){this.panel=null,this.logger=new i.Logger("DateDebugPanel"),this.createPanel()}createPanel(){this.panel=document.createElement("div"),this.panel.id="date-debug-panel",this.panel.style.cssText="\n            position: fixed;\n            bottom: 20px;\n            left: 20px;\n            width: 300px;\n            max-height: 400px;\n            background: rgba(0, 0, 0, 0.9);\n            color: white;\n            padding: 15px;\n            border-radius: 8px;\n            font-family: monospace;\n            font-size: 12px;\n            z-index: 9999;\n            overflow-y: auto;\n            box-shadow: 0 0 10px rgba(0,0,0,0.5);\n            display: none;\n        ";const e=document.createElement("div");e.innerHTML='\n            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">\n                <span style="color: #ffd700; font-weight: bold;">üìÖ Date Detection Debug</span>\n                <button id="date-debug-close" style="background: none; border: none; color: white; cursor: pointer;">‚úï</button>\n            </div>\n        ',this.panel.appendChild(e);const t=document.createElement("div");t.id="date-debug-content",this.panel.appendChild(t),document.body.appendChild(this.panel),document.getElementById("date-debug-close")?.addEventListener("click",(()=>{this.toggleVisibility()})),document.addEventListener("keydown",(e=>{(e.ctrlKey||e.metaKey)&&e.shiftKey&&"T"===e.key&&(e.preventDefault(),this.toggleVisibility())}))}toggleVisibility(){if(this.panel){const e="block"===this.panel.style.display;this.panel.style.display=e?"none":"block"}}updateDebugInfo(e){const t=document.getElementById("date-debug-content");t&&(t.innerHTML=`\n            <div class="date-stats" style="margin-bottom: 15px;">\n                <div style="color: #0066cc; margin-bottom: 8px;">\n                    Found ${e.totalDates} date${1!==e.totalDates?"s":""}\n                </div>\n                ${this.renderTypeDistribution(e.types)}\n            </div>\n            <div class="date-detections">\n                <div style="color: #ffd700; margin-bottom: 8px;">Detected Dates:</div>\n                ${this.renderDetections(e.detections)}\n            </div>\n        `)}renderTypeDistribution(e){const t={due:"#ff6b6b",availability:"#4CAF50",unlock:"#2196F3",unknown:"#9e9e9e"};return Object.entries(e).map((([e,n])=>`\n                <div style="margin-left: 10px; color: ${t[e]};">\n                    ${e.charAt(0).toUpperCase()+e.slice(1)}: ${n}\n                </div>\n            `)).join("")}renderDetections(e){return e.map((e=>`\n                <div style="margin: 8px 0; padding: 8px; background: rgba(255,255,255,0.1); border-radius: 4px;">\n                    <div style="margin-bottom: 4px; color: #90EE90;">\n                        ${e.text}\n                    </div>\n                    <div style="font-size: 11px; color: #ADD8E6;">\n                        Type: ${e.type}\n                    </div>\n                    <div style="font-size: 11px; color: #DDA0DD;">\n                        Parsed: ${e.date}\n                    </div>\n                    <div style="font-size: 11px; color: #FFB6C1;">\n                        Element: ${e.element}\n                    </div>\n                </div>\n            `)).join("")}logDateDetection(e,t){this.logger.debug(e,t)}}},780:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DebugPanel=void 0;const i=n(39),s=n(971);t.DebugPanel=class{constructor(){this.panel=null,this.isVisible=!1,this.logger=new i.Logger("DebugPanel"),this.performanceMonitor=s.PerformanceMonitor.getInstance(),this.createPanel(),this.initializeKeyboardShortcut()}createPanel(){this.panel=document.createElement("div"),this.panel.id="canvaspal-debug-panel",this.panel.innerHTML='\n            <div class="debug-panel-header">\n                <span>üîç CanvasPal Debug</span>\n                <div class="debug-panel-controls">\n                    <button id="clear-metrics" title="Clear Performance Metrics">üóëÔ∏è</button>\n                    <button id="canvaspal-debug-close">‚úï</button>\n                </div>\n            </div>\n            <div class="debug-panel-content">\n                <div id="performance-metrics"></div>\n                <div id="assignment-info"></div>\n            </div>\n        ',this.panel.style.cssText="\n            position: fixed;\n            bottom: 20px;\n            right: 20px;\n            width: 350px;\n            max-height: 500px;\n            background: rgba(0, 0, 0, 0.9);\n            color: white;\n            padding: 15px;\n            border-radius: 8px;\n            font-family: monospace;\n            font-size: 12px;\n            z-index: 9999;\n            overflow-y: auto;\n            box-shadow: 0 0 10px rgba(0,0,0,0.5);\n            display: none;\n        ";const e=document.createElement("style");e.textContent="\n            .debug-panel-header {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                margin-bottom: 10px;\n                padding-bottom: 10px;\n                border-bottom: 1px solid rgba(255,255,255,0.1);\n            }\n\n            .debug-panel-controls {\n                display: flex;\n                gap: 8px;\n            }\n\n            .debug-panel-controls button {\n                background: none;\n                border: none;\n                color: white;\n                cursor: pointer;\n                padding: 4px;\n                border-radius: 4px;\n                transition: background 0.2s;\n            }\n\n            .debug-panel-controls button:hover {\n                background: rgba(255,255,255,0.1);\n            }\n\n            .performance-section {\n                margin: 10px 0;\n                padding: 8px;\n                background: rgba(255,255,255,0.05);\n                border-radius: 4px;\n            }\n\n            .metric-item {\n                margin: 4px 0;\n                display: flex;\n                justify-content: space-between;\n            }\n\n            .metric-value {\n                color: #90EE90;\n            }\n\n            .slow-metric {\n                color: #ff6b6b;\n            }\n\n            .normal-metric {\n                color: #ffd700;\n            }\n\n            .fast-metric {\n                color: #90EE90;\n            }\n        ",document.head.appendChild(e),document.body.appendChild(this.panel),document.getElementById("canvaspal-debug-close")?.addEventListener("click",(()=>{this.toggleVisibility()})),document.getElementById("clear-metrics")?.addEventListener("click",(()=>{this.performanceMonitor.clear(),this.updatePerformanceMetrics()}))}initializeKeyboardShortcut(){document.addEventListener("keydown",(e=>{(e.ctrlKey||e.metaKey)&&e.shiftKey&&"D"===e.key&&(e.preventDefault(),this.toggleVisibility())}))}toggleVisibility(){this.panel&&(this.isVisible=!this.isVisible,this.panel.style.display=this.isVisible?"block":"none",this.logger.debug("Debug panel "+(this.isVisible?"shown":"hidden")))}updatePerformanceMetrics(){const e=document.getElementById("performance-metrics");if(!e)return;const t=this.performanceMonitor.getReport();e.innerHTML=`\n            <div class="performance-section">\n                <h3>Performance Summary</h3>\n                <div class="metric-item">\n                    <span>Total Duration:</span>\n                    <span class="metric-value">${t.summary.totalDuration.toFixed(2)}ms</span>\n                </div>\n                <div class="metric-item">\n                    <span>Average Duration:</span>\n                    <span class="metric-value">${t.summary.averageDuration.toFixed(2)}ms</span>\n                </div>\n                <div class="metric-item">\n                    <span>Slowest Operation:</span>\n                    <span class="slow-metric">${t.summary.slowestOperation.name} (${t.summary.slowestOperation.duration.toFixed(2)}ms)</span>\n                </div>\n                <div class="metric-item">\n                    <span>Fastest Operation:</span>\n                    <span class="fast-metric">${t.summary.fastestOperation.name} (${t.summary.fastestOperation.duration.toFixed(2)}ms)</span>\n                </div>\n            </div>\n            <div class="performance-section">\n                <h3>Recent Operations</h3>\n                ${t.metrics.slice(-5).map((e=>`\n                    <div class="metric-item">\n                        <span>${e.name}</span>\n                        <span class="${this.getMetricSpeedClass(e.duration||0)}">${e.duration?.toFixed(2)}ms</span>\n                    </div>\n                `)).join("")}\n            </div>\n        `}getMetricSpeedClass(e){return e>100?"slow-metric":e>50?"normal-metric":"fast-metric"}updateAssignmentInfo(e){const t=document.getElementById("assignment-info");if(!t)return;const n=this.getAssignmentTypeCounts(e),i=this.getPriorityRanges(e);t.innerHTML=`\n            <div style="margin-bottom: 15px;">\n                <div style="color: #0066cc; margin-bottom: 8px;">\n                    Found ${e.length} assignments\n                </div>\n                ${this.renderTypeCounts(n)}\n                ${this.renderPriorityDistribution(i)}\n            </div>\n            ${this.renderAssignmentList(e)}\n        `,this.updatePerformanceMetrics()}getAssignmentTypeCounts(e){return e.reduce(((e,t)=>(e[t.type]=(e[t.type]||0)+1,e)),{})}getPriorityRanges(e){return e.reduce(((e,t)=>(t.priorityScore>=.7?e.high=(e.high||0)+1:t.priorityScore>=.4?e.medium=(e.medium||0)+1:e.low=(e.low||0)+1,e)),{})}renderTypeCounts(e){return`\n            <div style="margin-bottom: 10px;">\n                <div style="color: #ffd700; margin-bottom: 5px;">Assignment Types:</div>\n                ${Object.entries(e).map((([e,t])=>`\n                    <div style="margin-left: 10px; color: #90EE90;">\n                        ${e}: ${t}\n                    </div>\n                `)).join("")}\n            </div>\n        `}renderPriorityDistribution(e){const t={high:"#ff6b6b",medium:"#ffd700",low:"#90EE90"};return`\n            <div style="margin-bottom: 10px;">\n                <div style="color: #ffd700; margin-bottom: 5px;">Priority Distribution:</div>\n                ${Object.entries(e).map((([e,n])=>`\n                    <div style="margin-left: 10px; color: ${t[e]};">\n                        ${e}: ${n}\n                    </div>\n                `)).join("")}\n            </div>\n        `}renderAssignmentList(e){return`\n            <div style="margin-top: 15px;">\n                <div style="color: #ffd700; margin-bottom: 5px;">Detailed Assignments:</div>\n                ${e.map((e=>this.renderAssignmentDetail(e))).join("")}\n            </div>\n        `}renderAssignmentDetail(e){const t=e.priorityScore>=.7?"#ff6b6b":e.priorityScore>=.4?"#ffd700":"#90EE90";return`\n            <div style="margin: 8px 0; padding: 8px; border-left: 2px solid ${t}; background: rgba(255,255,255,0.1);">\n                <div style="margin-bottom: 4px;">üìö ${e.title}</div>\n                <div style="color: #90EE90; margin-bottom: 4px;">\n                    ${e.points?`üìù ${e.points}/${e.maxPoints} points`:"No points data"}\n                </div>\n                <div style="color: #ADD8E6; font-size: 11px;">\n                    ‚è∞ Due: ${e.dueDate.toLocaleDateString()}\n                </div>\n                <div style="color: #DDA0DD; font-size: 11px;">\n                    üìö Course: ${e.course}\n                </div>\n                <div style="color: ${t}; font-size: 11px; margin-top: 4px;">\n                    ‚ö° Priority: ${Math.round(100*e.priorityScore)}%\n                </div>\n            </div>\n        `}logDetectionEvent(e,t){this.logger.debug(e,t)}updatePerformanceAnalysis(e){}}},929:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PerformanceLogger=void 0;const i=n(39);class s{constructor(){this.logger=new i.Logger("PerformanceLogger")}async logPerformance(e){try{const t=await this.getLogs(),n={timestamp:Date.now(),metrics:e,summary:this.calculateSummary(e)};for(t.unshift(n);t.length>s.MAX_LOGS;)t.pop();await chrome.storage.local.set({[s.STORAGE_KEY]:t}),this.logger.debug("Performance log saved:",n)}catch(e){this.logger.error("Error saving performance log:",e)}}calculateSummary(e){if(0===e.length)return{totalDuration:0,averageDuration:0,slowestOperation:"",fastestOperation:""};const t=e.reduce(((e,t)=>e+t.duration),0),n=[...e].sort(((e,t)=>t.duration-e.duration));return{totalDuration:t,averageDuration:t/e.length,slowestOperation:n[0].name,fastestOperation:n[n.length-1].name}}async getLogs(){try{return(await chrome.storage.local.get(s.STORAGE_KEY))[s.STORAGE_KEY]||[]}catch(e){return this.logger.error("Error retrieving performance logs:",e),[]}}async getPerformanceAnalysis(){const e=await this.getLogs();if(e.length<2)return{trends:[],hotspots:[],recommendations:["Not enough data for analysis"]};const t={};e.forEach((e=>{e.metrics.forEach((e=>{t[e.name]||(t[e.name]=[]),t[e.name].push(e.duration)}))}));const n=Object.entries(t).map((([e,t])=>{const n=t.slice(0,Math.floor(t.length/2)),i=t.slice(Math.floor(t.length/2)),s=this.calculateAverage(n),r=this.calculateAverage(i),o=(s-r)/r*100;return{operation:e,averageDuration:s,trend:this.calculateTrend(o),percentageChange:o}})),i=Object.entries(t).map((([e,t])=>({operation:e,frequency:t.length,averageDuration:this.calculateAverage(t)}))).filter((t=>t.averageDuration>100||t.frequency>.5*e.length)).sort(((e,t)=>t.averageDuration*t.frequency-e.averageDuration*e.frequency));return{trends:n,hotspots:i,recommendations:this.generateRecommendations(n,i)}}calculateAverage(e){return e.reduce(((e,t)=>e+t),0)/e.length}calculateTrend(e){return e<-5?"improving":e>5?"degrading":"stable"}generateRecommendations(e,t){const n=[],i=e.filter((e=>"degrading"===e.trend));return i.length>0&&n.push(`Performance degradation detected in: ${i.map((e=>`${e.operation} (${e.percentageChange.toFixed(1)}% slower)`)).join(", ")}`),t.forEach((e=>{e.averageDuration>200&&n.push(`Consider optimizing ${e.operation} (avg: ${e.averageDuration.toFixed(1)}ms, called ${e.frequency} times)`)})),t.length>3&&n.push("Consider reducing the number of expensive operations running in parallel"),0===n.length&&n.push("Performance is within acceptable ranges"),n}async clearLogs(){try{await chrome.storage.local.remove(s.STORAGE_KEY),this.logger.info("Performance logs cleared")}catch(e){this.logger.error("Error clearing performance logs:",e)}}}t.PerformanceLogger=s,s.MAX_LOGS=100,s.STORAGE_KEY="performanceLogs"},945:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AssignmentRenderer=void 0;const i=n(39);t.AssignmentRenderer=class{constructor(){this.logger=new i.Logger("AssignmentRenderer")}renderAssignment(e){const t=document.createElement("div");return t.className=this.getAssignmentClasses(e),t.dataset.id=e.id,t.innerHTML=`\n            <div class="course-name">${this.escapeHtml(e.course)}</div>\n            <div class="assignment-header">\n                <span class="assignment-type type-${e.type}">${this.capitalizeFirstLetter(e.type)}</span>\n                <span class="priority-score">${Math.round(100*e.priorityScore)}%</span>\n            </div>\n            <div class="assignment-title">${this.escapeHtml(e.title)}</div>\n            <div class="assignment-details">\n                <div class="detail-item">\n                    <span class="detail-icon">‚è∞</span>\n                    <span>${this.formatDueDate(e.dueDate)}</span>\n                </div>\n                ${this.renderPointsDisplay(e)}\n                ${e.details?this.renderAdditionalDetails(e.details):""}\n            </div>\n            <div class="completion">\n                <input type="checkbox" \n                    ${e.completed?"checked":""} \n                    title="Mark as complete"\n                    onclick="handleCompletionToggle('${e.id}', this.checked)">\n            </div>\n        `,t}getAssignmentClasses(e){const t=["assignment-item"];return e.priorityScore>=.7?t.push("high-priority"):e.priorityScore>=.4?t.push("medium-priority"):t.push("low-priority"),t.join(" ")}formatDueDate(e){const t=new Date,n=Math.ceil((e.getTime()-t.getTime())/864e5);return n<0?`Overdue by ${Math.abs(n)} day${1!==Math.abs(n)?"s":""}`:0===n?"Due today":1===n?"Due tomorrow":`Due in ${n} days`}renderPointsDisplay(e){return e.points||e.maxPoints?`\n            <div class="detail-item">\n                <span class="detail-icon">üìä</span>\n                <span class="points-display">\n                    ${e.points||0} / ${e.maxPoints||0} points\n                    ${e.gradeWeight?` (${Math.round(100*e.gradeWeight)}% of grade)`:""}\n                </span>\n            </div>\n        `:""}renderAdditionalDetails(e){if(!e)return"";let t="";return e.submissionType?.length&&(t+=`\n                <div class="detail-item">\n                    <span class="detail-icon">üìù</span>\n                    <span>Submit via: ${e.submissionType.join(", ")}</span>\n                </div>\n            `),e.isLocked&&(t+='\n                <div class="detail-item">\n                    <span class="detail-icon">üîí</span>\n                    <span>Locked</span>\n                </div>\n            '),t}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}capitalizeFirstLetter(e){return e.charAt(0).toUpperCase()+e.slice(1)}}},971:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PerformanceMonitor=void 0;const i=n(39);class s{constructor(){this.metrics=[],this.logger=new i.Logger("PerformanceMonitor")}static getInstance(){return s.instance||(s.instance=new s),s.instance}startMetric(e,t){const n=`${e}_${Date.now()}`;return this.metrics.push({name:e,startTime:performance.now(),metadata:t}),n}endMetric(e){const t=this.metrics.find((t=>t.name===e&&!t.endTime));t&&(t.endTime=performance.now(),t.duration=t.endTime-t.startTime,this.logger.debug(`Performance metric - ${e}:`,{duration:`${t.duration.toFixed(2)}ms`,metadata:t.metadata}))}getReport(){const e=this.metrics.filter((e=>void 0!==e.duration));if(0===e.length)return{metrics:[],summary:{totalDuration:0,averageDuration:0,slowestOperation:{name:"none",duration:0},fastestOperation:{name:"none",duration:0}}};const t=e.reduce(((e,t)=>e+(t.duration||0)),0),n=t/e.length,i=[...e].sort(((e,t)=>(t.duration||0)-(e.duration||0)));return{metrics:e,summary:{totalDuration:t,averageDuration:n,slowestOperation:{name:i[0].name,duration:i[0].duration||0},fastestOperation:{name:i[i.length-1].name,duration:i[i.length-1].duration||0}}}}clear(){this.metrics=[]}monitorAsync(e,t,n){return this.startMetric(e,n),t().finally((()=>this.endMetric(e)))}monitor(e,t,n){this.startMetric(e,n);const i=t();return this.endMetric(e),i}}t.PerformanceMonitor=s}},t={};function n(i){var s=t[i];if(void 0!==s)return s.exports;var r=t[i]={exports:{}};return e[i](r,r.exports,n),r.exports}(()=>{const e=n(945),t=n(39),i=n(405);class s{constructor(){this.assignments=[],this.typeFilter="all",this.priorityFilter="all",this.isPopupVisible=!1,this.renderer=new e.AssignmentRenderer,this.logger=new t.Logger("PopupManager"),this.debugManager=new i.DebugManager,this.initializeEventListeners(),this.loadAssignments(),this.initializeDebugFeatures()}initializeEventListeners(){document.getElementById("toggleButton")?.addEventListener("click",(()=>{this.togglePopup()})),document.getElementById("typeFilter")?.addEventListener("change",(e=>{this.typeFilter=e.target.value,this.renderAssignments()})),document.getElementById("priorityFilter")?.addEventListener("change",(e=>{this.priorityFilter=e.target.value,this.renderAssignments()})),document.getElementById("refreshData")?.addEventListener("click",(()=>{this.loadAssignments()})),document.getElementById("openSettings")?.addEventListener("click",(()=>{chrome.runtime.openOptionsPage&&chrome.runtime.openOptionsPage()})),chrome.runtime.onMessage.addListener((e=>{"SYNC_COMPLETE"===e.type?(this.updateLastSyncTime(),this.loadAssignments()):"SYNC_ERROR"===e.type?this.showError("Sync Failed"):"ASSIGNMENTS_UPDATED"===e.type&&(this.assignments=e.assignments,this.renderAssignments(),this.updateAssignmentCount())}))}togglePopup(){const e=document.getElementById("popupContent");e&&(this.isPopupVisible=!this.isPopupVisible,e.classList.toggle("visible"),e.classList.toggle("hidden"))}updateAssignmentCount(){const e=document.getElementById("assignmentCount");if(e){const t=this.assignments.filter((e=>!e.completed)).length;e.textContent=`${t} Assignment${1!==t?"s":""} Due`}}async loadAssignments(){try{this.setLoading(!0);const e=await chrome.runtime.sendMessage({type:"GET_ASSIGNMENTS"});if(e.error)throw new Error(e.error);this.assignments=e.assignments,this.updateLastSyncTime(),this.updateAssignmentCount(),this.renderAssignments()}catch(e){this.logger.error("Failed to load assignments:",e),this.showError("Failed to load assignments. Please try again.");const t=document.getElementById("assignmentCount");t&&(t.textContent="Error loading")}finally{this.setLoading(!1)}}renderAssignments(){const e=document.getElementById("assignmentList");if(!e)return;e.innerHTML="";const t=this.filterAssignments();0!==t.length?t.forEach((t=>{const n=this.renderer.renderAssignment(t);e.appendChild(n)})):e.innerHTML='<div class="no-assignments">No assignments found</div>'}filterAssignments(){return this.assignments.filter((e=>{if("all"!==this.typeFilter&&e.type!==this.typeFilter)return!1;if("all"!==this.priorityFilter){const t=e.priorityScore;switch(this.priorityFilter){case"high":return t>=.7;case"medium":return t>=.4&&t<.7;case"low":return t<.4}}return!0}))}setLoading(e){const t=document.getElementById("sync-status");t&&(t.textContent=e?"Syncing...":"Synced",t.className=e?"loading":"")}showError(e){const t=document.getElementById("assignmentList");t&&(t.innerHTML=`<div class="error">${e}</div>`)}updateLastSyncTime(){const e=document.getElementById("data-freshness");e&&(e.textContent="Updated: Just now")}async handleCompletionToggle(e,t){try{await chrome.runtime.sendMessage({type:"UPDATE_ASSIGNMENT_COMPLETION",assignmentId:e,completed:t});const n=this.assignments.find((t=>t.id===e));n&&(n.completed=t,this.renderAssignments())}catch(e){this.logger.error("Failed to update assignment completion:",e)}}initializeDebugFeatures(){this.debugManager.isDebugEnabled()&&this.showDebugControls(),chrome.storage.onChanged.addListener((e=>{e.debugConfig&&(e.debugConfig.newValue.enabled?this.showDebugControls():this.hideDebugControls())}))}showDebugControls(){if(!document.getElementById("debug-controls")){const e=document.createElement("div");e.id="debug-controls",e.innerHTML='\n                <div class="debug-toolbar">\n                    <button id="toggleDateDebug" class="debug-button" title="Toggle Date Debug (Ctrl/Cmd + Shift + T)">\n                        üìÖ\n                    </button>\n                    <button id="toggleAssignmentDebug" class="debug-button" title="Toggle Assignment Debug (Ctrl/Cmd + Shift + D)">\n                        üîç\n                    </button>\n                    <button id="togglePriorityDebug" class="debug-button" title="Toggle Priority Debug">\n                        ‚ö°\n                    </button>\n                </div>\n            ';const t=document.querySelector("header");t&&(t.appendChild(e),this.initializeDebugButtonListeners())}}hideDebugControls(){const e=document.getElementById("debug-controls");e&&e.remove()}initializeDebugButtonListeners(){document.getElementById("toggleDateDebug")?.addEventListener("click",(()=>{this.debugManager.getDatePanel().toggleVisibility()})),document.getElementById("toggleAssignmentDebug")?.addEventListener("click",(()=>{this.debugManager.getMainPanel().toggleVisibility()})),document.getElementById("togglePriorityDebug")?.addEventListener("click",(()=>{const e=this.debugManager.getConfig();this.debugManager.updateDebugConfig({showPriorityDebug:!e.showPriorityDebug})}))}}window.addEventListener("DOMContentLoaded",(()=>{const e=new s;window.handleCompletionToggle=(t,n)=>{e.handleCompletionToggle(t,n)}}))})()})();
//# sourceMappingURL=popup.js.map