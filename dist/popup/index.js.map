{"version":3,"file":"popup/index.js","mappings":"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","sources":["webpack://canvaspal/./src/utils/priorityCalculator.ts","webpack://canvaspal/./src/popup/index.ts"],"sourcesContent":["export class PriorityCalculator {\n    static normalizeWeights(weights) {\n        const total = weights.dueDate + weights.gradeWeight + weights.impact;\n        return {\n            dueDate: weights.dueDate / total,\n            gradeWeight: weights.gradeWeight / total,\n            impact: weights.impact / total\n        };\n    }\n    static calculateDueDateFactor(assignment, allAssignments) {\n        const now = new Date().getTime();\n        const dueTime = assignment.dueDate.getTime();\n        const timeRemaining = dueTime - now;\n        // Add urgency bonus\n        let urgencyBonus = 0;\n        if (timeRemaining <= this.URGENCY_THRESHOLDS.CRITICAL) {\n            urgencyBonus = 0.3;\n        }\n        else if (timeRemaining <= this.URGENCY_THRESHOLDS.HIGH) {\n            urgencyBonus = 0.2;\n        }\n        else if (timeRemaining <= this.URGENCY_THRESHOLDS.MEDIUM) {\n            urgencyBonus = 0.1;\n        }\n        // Calculate base factor\n        const totalTime = Math.max(...allAssignments.map(a => a.dueDate.getTime())) - now;\n        const baseFactor = 1 - (timeRemaining / totalTime);\n        return Math.min(1, baseFactor + urgencyBonus);\n    }\n    static calculateGradeWeightFactor(assignment, allAssignments) {\n        const weight = assignment.gradeWeight || 0;\n        if (weight === 0)\n            return 0;\n        // Normalize weight relative to other assignments in the same course\n        const courseAssignments = allAssignments.filter(a => a.courseId === assignment.courseId);\n        const maxWeight = Math.max(...courseAssignments.map(a => a.gradeWeight || 0));\n        return weight / (maxWeight || 100);\n    }\n    static calculateImpactFactor(assignment) {\n        if (!assignment.pointsPossible || !assignment.currentScore) {\n            return 0.5; // Default medium priority if no grade data\n        }\n        const currentPercent = (assignment.currentScore / assignment.pointsPossible) * 100;\n        const potentialImprovement = assignment.pointsPossible - assignment.currentScore;\n        // Higher impact if grade is below C threshold\n        let impactMultiplier = 1;\n        if (currentPercent < this.GRADE_THRESHOLDS.C) {\n            impactMultiplier = 1.5;\n        }\n        else if (currentPercent < this.GRADE_THRESHOLDS.B) {\n            impactMultiplier = 1.2;\n        }\n        return (potentialImprovement / assignment.pointsPossible) * impactMultiplier;\n    }\n    static calculatePriority(assignment, allAssignments, weights) {\n        if (assignment.completed) {\n            return 0;\n        }\n        const normalizedWeights = this.normalizeWeights(weights);\n        const dueDateFactor = this.calculateDueDateFactor(assignment, allAssignments);\n        const gradeWeightFactor = this.calculateGradeWeightFactor(assignment, allAssignments);\n        const impactFactor = this.calculateImpactFactor(assignment);\n        return (dueDateFactor * normalizedWeights.dueDate) +\n            (gradeWeightFactor * normalizedWeights.gradeWeight) +\n            (impactFactor * normalizedWeights.impact);\n    }\n}\nPriorityCalculator.GRADE_THRESHOLDS = {\n    A: 90,\n    B: 80,\n    C: 70,\n    D: 60,\n    F: 0\n};\nPriorityCalculator.URGENCY_THRESHOLDS = {\n    CRITICAL: 24 * 60 * 60 * 1000, // 24 hours\n    HIGH: 72 * 60 * 60 * 1000, // 3 days\n    MEDIUM: 168 * 60 * 60 * 1000, // 1 week\n};\n","import { PriorityCalculator } from '../utils/priorityCalculator';\nclass PopupManager {\n    constructor() {\n        this.assignments = [];\n        this.weights = {\n            dueDate: 33,\n            gradeWeight: 33,\n            impact: 34\n        };\n        this.initializeEventListeners();\n        this.loadSettings();\n        this.fetchAssignments();\n        this.setupSyncListeners();\n    }\n    setupSyncListeners() {\n        chrome.runtime.onMessage.addListener((message) => {\n            if (message.type === 'syncComplete') {\n                const date = new Date(message.timestamp);\n                this.updateStatus(`Last synced: ${date.toLocaleTimeString()}`);\n                this.fetchAssignments();\n            }\n            else if (message.type === 'syncError') {\n                this.showError(message.error);\n            }\n        });\n    }\n    initializeEventListeners() {\n        document.getElementById('ical-url')?.addEventListener('change', (e) => {\n            const url = e.target.value;\n            this.saveICalUrl(url);\n        });\n        ['due-date-weight', 'grade-weight', 'impact-weight'].forEach(id => {\n            document.getElementById(id)?.addEventListener('input', (e) => {\n                this.updateWeights(id, parseInt(e.target.value));\n            });\n        });\n        // Add manual sync button listener\n        document.getElementById('sync-button')?.addEventListener('click', () => {\n            this.updateStatus('Syncing...');\n            chrome.runtime.sendMessage({ type: 'forceSync' })\n                .catch(error => this.showError('Failed to sync: ' + error));\n        });\n    }\n    async loadSettings() {\n        const settings = await chrome.storage.sync.get(['icalUrl', 'weights']);\n        if (settings.icalUrl) {\n            document.getElementById('ical-url').value = settings.icalUrl;\n        }\n        if (settings.weights) {\n            this.weights = settings.weights;\n            this.updateWeightInputs();\n        }\n    }\n    async fetchAssignments() {\n        try {\n            const response = await chrome.runtime.sendMessage({ type: 'fetchAssignments' });\n            if (response.error) {\n                this.showError(response.error);\n            }\n            else {\n                this.assignments = response;\n                this.renderAssignments();\n            }\n        }\n        catch (error) {\n            this.showError('Failed to fetch assignments');\n        }\n    }\n    async saveICalUrl(url) {\n        try {\n            await chrome.storage.sync.set({ icalUrl: url });\n            this.updateStatus('Settings saved');\n            this.fetchAssignments();\n        }\n        catch (error) {\n            this.showError('Failed to save settings');\n        }\n    }\n    updateWeights(id, value) {\n        const weightType = id.replace('-weight', '');\n        this.weights[weightType] = value;\n        chrome.storage.sync.set({ weights: this.weights });\n    }\n    updateWeightInputs() {\n        Object.entries(this.weights).forEach(([key, value]) => {\n            const input = document.getElementById(`${key}-weight`);\n            if (input)\n                input.value = value.toString();\n        });\n    }\n    updateAssignmentPriorities() {\n        this.assignments.forEach(assignment => {\n            assignment.priority = PriorityCalculator.calculatePriority(assignment, this.assignments, this.weights);\n        });\n    }\n    getPriorityClass(priority) {\n        if (priority >= 0.7)\n            return 'high-priority';\n        if (priority >= 0.4)\n            return 'medium-priority';\n        return 'low-priority';\n    }\n    getTimeRemaining(dueDate) {\n        const now = new Date();\n        const diff = dueDate.getTime() - now.getTime();\n        const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n        if (days < 0)\n            return 'Past due';\n        if (days === 0)\n            return 'Due today';\n        if (days === 1)\n            return 'Due tomorrow';\n        return `${days} days remaining`;\n    }\n    renderAssignments() {\n        const container = document.getElementById('assignments-list');\n        if (!container)\n            return;\n        this.updateAssignmentPriorities();\n        // Sort assignments by priority\n        const sortedAssignments = [...this.assignments].sort((a, b) => (b.priority || 0) - (a.priority || 0));\n        container.innerHTML = sortedAssignments\n            .map(assignment => {\n            const priorityClass = this.getPriorityClass(assignment.priority || 0);\n            const timeRemaining = this.getTimeRemaining(assignment.dueDate);\n            return `\n\t\t\t\t\t<div class=\"assignment ${priorityClass}\">\n\t\t\t\t\t\t<div class=\"assignment-header\">\n\t\t\t\t\t\t\t<h3>${assignment.title}</h3>\n\t\t\t\t\t\t\t<label class=\"completion-toggle\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" \n\t\t\t\t\t\t\t\t\t${assignment.completed ? 'checked' : ''} \n\t\t\t\t\t\t\t\t\tdata-assignment-id=\"${assignment.title}\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tComplete\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"assignment-details\">\n\t\t\t\t\t\t\t<p>Due: ${assignment.dueDate.toLocaleDateString()} (${timeRemaining})</p>\n\t\t\t\t\t\t\t<p>Course: ${assignment.courseId}</p>\n\t\t\t\t\t\t\t${assignment.gradeWeight ?\n                `<p>Weight: ${assignment.gradeWeight}%</p>` : ''}\n\t\t\t\t\t\t\t${assignment.priority ?\n                `<p>Priority: ${(assignment.priority * 100).toFixed(1)}%</p>` : ''}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n        })\n            .join('');\n        // Add event listeners for completion toggles\n        this.addCompletionListeners();\n    }\n    addCompletionListeners() {\n        document.querySelectorAll('.completion-toggle input').forEach(checkbox => {\n            checkbox.addEventListener('change', (e) => {\n                const target = e.target;\n                const assignmentId = target.dataset.assignmentId;\n                if (assignmentId) {\n                    const assignment = this.assignments.find(a => a.title === assignmentId);\n                    if (assignment) {\n                        assignment.completed = target.checked;\n                        this.saveAssignmentStatus(assignment);\n                        this.renderAssignments();\n                    }\n                }\n            });\n        });\n    }\n    async saveAssignmentStatus(assignment) {\n        try {\n            const key = `assignment_${assignment.title}`;\n            await chrome.storage.local.set({ [key]: assignment.completed });\n        }\n        catch (error) {\n            this.showError('Failed to save assignment status');\n        }\n    }\n    updateStatus(message) {\n        const status = document.getElementById('sync-status');\n        if (status) {\n            status.textContent = message;\n            setTimeout(() => {\n                status.textContent = '';\n            }, 3000);\n        }\n    }\n    showError(message) {\n        const error = document.getElementById('error-message');\n        if (error) {\n            error.textContent = message;\n            setTimeout(() => {\n                error.textContent = '';\n            }, 5000);\n        }\n    }\n}\n// Initialize popup\ndocument.addEventListener('DOMContentLoaded', () => {\n    new PopupManager();\n});\n"],"names":["PriorityCalculator","normalizeWeights","weights","total","dueDate","gradeWeight","impact","calculateDueDateFactor","assignment","allAssignments","now","Date","getTime","timeRemaining","urgencyBonus","this","URGENCY_THRESHOLDS","CRITICAL","HIGH","MEDIUM","baseFactor","Math","max","map","a","min","calculateGradeWeightFactor","weight","courseAssignments","filter","courseId","calculateImpactFactor","pointsPossible","currentScore","currentPercent","potentialImprovement","impactMultiplier","GRADE_THRESHOLDS","C","B","calculatePriority","completed","normalizedWeights","dueDateFactor","gradeWeightFactor","impactFactor","A","D","F","PopupManager","constructor","assignments","initializeEventListeners","loadSettings","fetchAssignments","setupSyncListeners","chrome","runtime","onMessage","addListener","message","type","date","timestamp","updateStatus","toLocaleTimeString","showError","error","document","getElementById","addEventListener","e","url","target","value","saveICalUrl","forEach","id","updateWeights","parseInt","sendMessage","catch","settings","storage","sync","get","icalUrl","updateWeightInputs","response","renderAssignments","set","weightType","replace","Object","entries","key","input","toString","updateAssignmentPriorities","priority","getPriorityClass","getTimeRemaining","diff","days","floor","container","sortedAssignments","sort","b","innerHTML","priorityClass","title","toLocaleDateString","toFixed","join","addCompletionListeners","querySelectorAll","checkbox","assignmentId","dataset","find","checked","saveAssignmentStatus","local","status","textContent","setTimeout"],"sourceRoot":""}