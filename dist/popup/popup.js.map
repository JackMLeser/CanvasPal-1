{"version":3,"file":"popup/popup.js","mappings":"yBAEA,MAAMA,EAGF,WAAAC,GAFQ,KAAAC,YAA4B,GAGhCC,KAAKC,2BACLD,KAAKE,iBACT,CAEQ,wBAAAD,GACJE,SAASC,eAAe,iBAAiBC,iBAAiB,SAAS,KAC3DC,OAAOC,QAAQC,iBACfF,OAAOC,QAAQC,iB,GAG3B,CAEQ,qBAAMN,GACV,IACI,MAAMO,QAAaH,OAAOG,KAAKC,MAAM,CAAEC,QAAQ,EAAMC,eAAe,IACpE,IAAKH,EAAK,IAAII,GAEV,YADAb,KAAKc,kBAAkB,uBAI3BR,OAAOG,KAAKM,YAAYN,EAAK,GAAGI,GAAI,CAAEG,OAAQ,mBAAqBC,IAC3DX,OAAOC,QAAQW,UACflB,KAAKc,kBAAkB,iCAItBG,GAAaA,EAASlB,aAA+C,IAAhCkB,EAASlB,YAAYoB,QAK/DnB,KAAKD,YAAckB,EAASlB,YAC5BC,KAAKoB,qBALDpB,KAAKc,kBAAkB,uBAKH,G,CAG9B,MAAOO,GACLrB,KAAKc,kBAAkB,6B,CAE/B,CAEQ,iBAAAM,GACJ,MAAME,EAAiBnB,SAASC,eAAe,kBAC1CkB,IAELA,EAAeC,UAAYvB,KAAKD,YAC3ByB,KAAIC,GAAczB,KAAK0B,wBAAwBD,KAC/CE,KAAK,IACd,CAEQ,uBAAAD,CAAwBD,GAE5B,MAAO,6CADezB,KAAK4B,iBAAiBH,EAAWI,mEAGfJ,EAAWK,+DACVL,EAAWM,uEACJ/B,KAAKgC,WAAWP,EAAWQ,8CAG/E,CAEQ,gBAAAL,CAAiBC,GACrB,OAAIA,EAAgB,GAAY,gBAC5BA,EAAgB,GAAY,kBACzB,cACX,CAEQ,UAAAG,CAAWE,GACf,OAAO,IAAIC,KAAKD,GAAME,mBAAmB,QAAS,CAC9CC,MAAO,QACPC,IAAK,UACLC,KAAM,WAEd,CAEQ,iBAAAzB,CAAkB0B,GACtB,MAAMlB,EAAiBnB,SAASC,eAAe,kBAC3CkB,IACAA,EAAeC,UAAY,uEAEjBiB,0CAIlB,EAIJC,OAAOpC,iBAAiB,oBAAoB,KACxC,IAAIR,CAAc,G","sources":["webpack://canvaspal/./src/popup/popup.ts"],"sourcesContent":["import { Assignment } from '../types/models';\n\nclass PopupManager {\n    private assignments: Assignment[] = [];\n\n    constructor() {\n        this.initializeEventListeners();\n        this.loadAssignments();\n    }\n\n    private initializeEventListeners(): void {\n        document.getElementById('openSettings')?.addEventListener('click', () => {\n            if (chrome.runtime.openOptionsPage) {\n                chrome.runtime.openOptionsPage();\n            }\n        });\n    }\n\n    private async loadAssignments(): Promise<void> {\n        try {\n            const tabs = await chrome.tabs.query({ active: true, currentWindow: true });\n            if (!tabs[0]?.id) {\n                this.showNoAssignments('No active tab found');\n                return;\n            }\n\n            chrome.tabs.sendMessage(tabs[0].id, { action: \"getAssignments\" }, (response) => {\n                if (chrome.runtime.lastError) {\n                    this.showNoAssignments('Error communicating with page');\n                    return;\n                }\n\n                if (!response || !response.assignments || response.assignments.length === 0) {\n                    this.showNoAssignments('No assignments found');\n                    return;\n                }\n\n                this.assignments = response.assignments;\n                this.renderAssignments();\n            });\n\n        } catch (error) {\n            this.showNoAssignments('Failed to load assignments');\n        }\n    }\n\n    private renderAssignments(): void {\n        const assignmentList = document.getElementById('assignmentList');\n        if (!assignmentList) return;\n\n        assignmentList.innerHTML = this.assignments\n            .map(assignment => this.createAssignmentElement(assignment))\n            .join('');\n    }\n\n    private createAssignmentElement(assignment: Assignment): string {\n        const priorityClass = this.getPriorityClass(assignment.priorityScore);\n        return `\n            <div class=\"assignment-item ${priorityClass}\">\n                <div class=\"assignment-title\">${assignment.title}</div>\n                <div class=\"assignment-course\">${assignment.course}</div>\n                <div class=\"assignment-due-date\">Due: ${this.formatDate(assignment.dueDate)}</div>\n            </div>\n        `;\n    }\n\n    private getPriorityClass(priorityScore: number): string {\n        if (priorityScore > 0.7) return 'high-priority';\n        if (priorityScore > 0.4) return 'medium-priority';\n        return 'low-priority';\n    }\n\n    private formatDate(date: Date): string {\n        return new Date(date).toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n        });\n    }\n\n    private showNoAssignments(message: string): void {\n        const assignmentList = document.getElementById('assignmentList');\n        if (assignmentList) {\n            assignmentList.innerHTML = `\n                <div class=\"no-assignments\">\n                    ${message}\n                </div>\n            `;\n        }\n    }\n}\n\n// Initialize popup\nwindow.addEventListener('DOMContentLoaded', () => {\n    new PopupManager();\n});\n"],"names":["PopupManager","constructor","assignments","this","initializeEventListeners","loadAssignments","document","getElementById","addEventListener","chrome","runtime","openOptionsPage","tabs","query","active","currentWindow","id","showNoAssignments","sendMessage","action","response","lastError","length","renderAssignments","error","assignmentList","innerHTML","map","assignment","createAssignmentElement","join","getPriorityClass","priorityScore","title","course","formatDate","dueDate","date","Date","toLocaleDateString","month","day","year","message","window"],"sourceRoot":""}